{"{\"assumptions\":{},\"sourceRoot\":\"/Users/carstenkraus/Entwicklung/github/nodejs/KN-2022/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/carstenkraus/Entwicklung/github/nodejs/KN-2022\",\"filename\":\"/Users/carstenkraus/Entwicklung/github/nodejs/KN-2022/gulpfile.babel.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/carstenkraus/Entwicklung/github/nodejs/KN-2022\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.17.9:development":{"value":{"code":"'use strict';\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpLoadPlugins = _interopRequireDefault(require(\"gulp-load-plugins\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _path2 = _interopRequireDefault(require(\"path\"));\n\nvar _makeDir = _interopRequireDefault(require(\"make-dir\"));\n\nvar _yargs = _interopRequireDefault(require(\"yargs\"));\n\nvar _jsYaml = _interopRequireDefault(require(\"js-yaml\"));\n\nvar _nodeSpriteGenerator = _interopRequireDefault(require(\"node-sprite-generator\"));\n\nvar _es6Promise = _interopRequireDefault(require(\"es6-promise\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _rimraf = _interopRequireDefault(require(\"rimraf\"));\n\nvar _panini = _interopRequireDefault(require(\"panini\"));\n\nvar _styleSherpa = _interopRequireDefault(require(\"style-sherpa\"));\n\nvar _typechecks = _interopRequireDefault(require(\"@sgtmurtaugh/typechecks\"));\n\nvar _glob = _interopRequireDefault(require(\"glob\"));\n\nvar _fancyLog = _interopRequireDefault(require(\"fancy-log\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar resizeImage = require('resize-img'); // Load all Gulp plugins into one variable\n\n\nvar $ = (0, _gulpLoadPlugins[\"default\"])({\n  'DEBUG': true\n}); // Promise Definition for Tasks without Streams or existing Promises\n\nvar _Promise = _es6Promise[\"default\"].Promise; // Check for --production flag\n\nvar PRODUCTION = !!_yargs[\"default\"].argv.production; // Load settings from settings.yml\n// const { COMPATIBILITY, PORT, UNCSS_OPTIONS, PATHS } = loadConfig();\n\nvar config = loadConfig();\n/* ==================================================================================================================\n *  # Functions\n * ================================================================================================================== */\n\n/* ------------------------------\n *  ## Helper Functions\n * ------------------------------ */\n\n/**\n * Load the JSON Config\n */\n\nfunction loadConfig() {\n  // let ymlFile = fs.readFileSync('config.yml', 'utf8');\n  // return yaml.load(ymlFile);\n  var configFile = _fs[\"default\"].readFileSync('config.json', 'utf-8');\n\n  return JSON.parse(configFile);\n}\n/**\n * Creates the given directy if it not exists.\n * @param dir\n */\n\n\nfunction ensureFolder(dir) {\n  var bSuccess = false;\n\n  if (!_typechecks[\"default\"].isEmpty(dir)) {\n    if (!dir.startsWith(__dirname)) {\n      dir = _path2[\"default\"].join(__dirname, dir);\n    }\n\n    if (!(bSuccess = _fs[\"default\"].existsSync(dir))) {\n      var _path = _makeDir[\"default\"].sync(dir);\n\n      if (_typechecks[\"default\"].isNotEmpty(_path)) {\n        bSuccess = true;\n      }\n    }\n  }\n\n  return bSuccess;\n} // /**\n//  * Determines all files of a given directory\n//  */\n// function getFiles(dir) {\n//     return fs.readdirSync(dir)\n//         .filter(function (file) {\n//             return fs.statSync(path.join(dir, file)).isFile();\n//         });\n// }\n\n/**\n * Determines all subfolders of a given directory\n */\n\n\nfunction getFolders(dir) {\n  return _fs[\"default\"].readdirSync(dir).filter(function (file) {\n    return _fs[\"default\"].statSync(_path2[\"default\"].join(dir, file)).isDirectory();\n  });\n}\n/* ------------------------------\n *  ## Browser Functions\n * ------------------------------ */\n\n/**\n * Start a server with BrowserSync to preview the site in\n * @param done\n */\n\n\nfunction startServer(done) {\n  _browserSync[\"default\"].init({\n    server: config.paths.dist.path,\n    port: config.development.server.port\n  });\n\n  done();\n}\n/**\n * Reload the browser with BrowserSync\n */\n\n\nfunction reloadServer(done) {\n  _browserSync[\"default\"].reload();\n\n  done();\n}\n/**\n * Watch for changes to static assets, pages, Sass, and JavaScript\n * @param done\n */\n\n\nfunction watch(done) {\n  _gulp[\"default\"].watch(config.paths.src.assets, copyAssets);\n\n  _gulp[\"default\"].watch('src/pages/**/*.html').on('change', _gulp[\"default\"].series(generatePages, _browserSync[\"default\"].reload));\n\n  _gulp[\"default\"].watch('src/{layouts,partials}/**/{*.html,*.hbs}').on('change', _gulp[\"default\"].series(resetPages, generatePages, _browserSync[\"default\"].reload));\n\n  _gulp[\"default\"].watch('src/assets/scss/**/*.scss', generateSASS);\n\n  _gulp[\"default\"].watch('src/assets/js/**/*.js').on('change', _gulp[\"default\"].series(generateJS, copyInitJs, _browserSync[\"default\"].reload));\n\n  _gulp[\"default\"].watch('src/assets/img/**/*').on('change', _gulp[\"default\"].series(copyImages, _browserSync[\"default\"].reload));\n\n  _gulp[\"default\"].watch('src/styleguide/**').on('change', _gulp[\"default\"].series(generateStyleGuide, _browserSync[\"default\"].reload));\n\n  done();\n}\n/* ------------------------------\n *  ## Build Functions\n * ------------------------------ */\n\n/**\n * clean\n * @param done\n * Deletes dist and build folder\n * This happens every time a build starts\n */\n\n\nfunction clean(done) {\n  (0, _rimraf[\"default\"])(config.paths.dist.path, done);\n  (0, _rimraf[\"default\"])(config.paths.build.path, done);\n}\n/**\n * copyAssets\n * @returns {*}\n * Copy files out of the assets folder\n * This task skips over the \"img\", \"js\", and \"scss\" folders, which are parsed separately\n */\n\n\nfunction copyAssets() {\n  return _gulp[\"default\"].src([\"src/assets/**/*\", \"!src/assets/media/images{,/**}\", \"!src/assets/js{,/**}\", \"!src/assets/scss{,/**}\"]).pipe(_gulp[\"default\"].dest(_path2[\"default\"].join(config.paths.dist.path, config.paths.dist.assets)));\n}\n/**\n * TODO\n * @returns {*}\n */\n\n\nfunction copyInitJs() {\n  return _gulp[\"default\"].src(\"src/assets/vendors/gsb/js/init.js\").pipe(_path2[\"default\"].join(_gulp[\"default\"].dest(config.paths.dist.path, config.paths.dist.assets, 'js')));\n}\n/**\n * TODO\n * @returns {*}\n */\n\n\nfunction copyGsbModules() {\n  return _gulp[\"default\"].src(\"src/assets/vendors/gsb/js/gsb/**/*.js\").pipe(_gulp[\"default\"].dest(_path2[\"default\"].join(config.paths.dist.path, config.paths.dist.assets, '/js/gsb')));\n}\n/**\n * Copy images to the \"dist\" folder.\n * In production, the images are compressed\n * //TODO: Hier muessen alle src Ordner ignoriert werden! Leider greift die Logik hier noch nicht\n */\n\n\nfunction copyImages() {\n  return _gulp[\"default\"].src(['src/assets/media/images/**']).pipe($[\"if\"](PRODUCTION, $.imagemin([$.imagemin.gifsicle({\n    interlaced: true\n  }), $.imagemin.mozjpeg({\n    quality: 75,\n    progressive: true\n  }), $.imagemin.optipng({\n    optimizationLevel: 5\n  }), $.imagemin.svgo({\n    plugins: [{\n      removeViewBox: true\n    }, {\n      cleanupIDs: false\n    }]\n  })]\n  /** gulp-imigemin groesser 3\n  {\n      progressive: true\n  }\n   */\n  ))).pipe(_gulp[\"default\"].dest('dist/assets/media/images'));\n}\n/* ------------------------------\n *  ## resizeimg\n * ------------------------------ */\n\n/**\n * generateResizeimgScaledImages\n * @param done\n */\n\n\nfunction generateResizeimgScaledImages(done) {\n  var files = _glob[\"default\"].sync(config.resizeimg.src, {\n    \"absolute\": true,\n    \"ignore\": ['**/*.ignore/**']\n  });\n\n  var _iterator = _createForOfIteratorHelper(files),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var file = _step.value;\n\n      if (_typechecks[\"default\"].isNotEmpty(file)) {\n        var indexRelativPath = file.indexOf(config.resizeimg.path);\n\n        if (indexRelativPath > -1) {\n          var absolutPathPrefix = \"\";\n\n          if (indexRelativPath > 0) {\n            absolutPathPrefix = file.substring(0, indexRelativPath);\n          }\n\n          if (file.length > indexRelativPath) {\n            var filename = file.substring(indexRelativPath + config.resizeimg.path.length);\n\n            for (var dimensionKey in config.resizeimg.sizes) {\n              var indexExtension = filename.lastIndexOf('.');\n\n              if (indexExtension > -1) {\n                if (config.resizeimg.sizes.hasOwnProperty(dimensionKey)) {\n                  var dimension = config.resizeimg.sizes[dimensionKey];\n\n                  if (_typechecks[\"default\"].isNotEmpty(dimension)) {\n                    var _ret = function () {\n                      // check configured height / widht\n                      var resizeimgOptions = {};\n\n                      var bHasWidth = _typechecks[\"default\"].isNumeric(dimension.width);\n\n                      var bHasHeight = _typechecks[\"default\"].isNumeric(dimension.height);\n\n                      if (!bHasWidth && !bHasHeight) {\n                        _fancyLog[\"default\"].warn(\"size '\".concat(dimensionKey, \"' has no height and width!\"));\n\n                        return \"continue\";\n                      } // set auto dimension for missing config\n\n\n                      if (!bHasWidth) {\n                        // dimension.width = -1;\n                        dimension.width = \"auto\";\n                      }\n\n                      if (!bHasHeight) {\n                        // dimension.height = -1;\n                        dimension.height = \"auto\";\n                      } // create targetFolder\n\n\n                      var targetPath = _path2[\"default\"].join(absolutPathPrefix, config.resizeimg.target);\n\n                      var subFolder = \"\"; // SubFolder check\n\n                      var subFoldersEndIndex = filename.lastIndexOf('/');\n\n                      if (subFoldersEndIndex > -1) {\n                        subFolder = filename.substring(0, subFoldersEndIndex);\n                      }\n\n                      targetPath = _path2[\"default\"].join(targetPath, subFolder);\n\n                      if (_typechecks[\"default\"].isTrue(config.resizeimg.options.createFolders)) {\n                        targetPath = _path2[\"default\"].join(targetPath, dimensionKey);\n                      }\n\n                      ensureFolder(targetPath); // create Filename\n\n                      var targetFilename = \"\";\n\n                      if (subFoldersEndIndex > -1) {\n                        targetFilename = filename.substring(subFoldersEndIndex, indexExtension);\n                      } else {\n                        targetFilename = filename.substring(0, indexExtension);\n                      }\n\n                      if (_typechecks[\"default\"].isFalse(config.resizeimg.options.createFolders)) {\n                        targetFilename += '_';\n                        targetFilename += dimensionKey;\n                      }\n\n                      targetFilename += filename.substring(indexExtension);\n\n                      var targetFile = _path2[\"default\"].join(targetPath, targetFilename); // create resizeimg options\n\n\n                      if (_typechecks[\"default\"].isNumeric(dimension.width)) {\n                        resizeimgOptions['width'] = dimension.width;\n                      }\n\n                      if (_typechecks[\"default\"].isNumeric(dimension.height)) {\n                        resizeimgOptions['height'] = dimension.height;\n                      } // generate resized images\n\n\n                      resizeImage(_fs[\"default\"].readFileSync(file), resizeimgOptions).then(function (buf) {\n                        _fs[\"default\"].writeFileSync(targetFile, buf);\n                      });\n                    }();\n\n                    if (_ret === \"continue\") continue;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  done();\n}\n/* ------------------------------\n *  ## JavaScript Functions\n * ------------------------------ */\n\n/**\n * Combine JavaScript into one file\n * In production, the file is minified\n */\n\n\nfunction generateJS() {\n  return _gulp[\"default\"].src(config.paths.src.javascript).pipe($.sourcemaps.init()).pipe($.concat('app.js')).pipe($.babel()).pipe($[\"if\"](PRODUCTION, $.uglify().on('error', function (e) {\n    console.log(e);\n  }))).pipe($[\"if\"](!PRODUCTION, $.sourcemaps.write())).pipe(_gulp[\"default\"].dest(config.paths.dist.javascript));\n}\n/* ------------------------------\n *  ## Pages Functions\n * ------------------------------ */\n\n/**\n * Copy page templates into finished HTML files\n * @returns {*}\n */\n\n\nfunction generatePages() {\n  return _gulp[\"default\"].src('src/pages/**/*.{html,hbs,handlebars}').pipe((0, _panini[\"default\"])({\n    root: 'src/pages/',\n    layouts: 'src/layouts/',\n    partials: 'src/partials/',\n    data: 'src/data/',\n    helpers: 'src/helpers/'\n  })).pipe(_gulp[\"default\"].dest(config.paths.dist.path));\n}\n/**\n * resetPages\n * @param done\n * Load updated HTML templates and partials into Panini\n */\n\n\nfunction resetPages(done) {\n  _panini[\"default\"].refresh();\n\n  done();\n}\n/* ------------------------------\n *  ## SASS Functions\n * ------------------------------ */\n\n/**\n * Compile Sass into CSS\n * In production, the CSS is compressed\n */\n\n\nfunction generateSASS() {\n  return _gulp[\"default\"].src(config.paths.src.sass).pipe($.sourcemaps.init()).pipe($.dartSass().on('error', $.dartSass.logError)).pipe($.autoprefixer()) // Comment in the pipe below to run UnCSS in production\n  // .pipe($.if(PRODUCTION, $.uncss(UNCSS_OPTIONS)))\n  .pipe($[\"if\"](PRODUCTION, $.cssnano())).pipe($[\"if\"](!PRODUCTION, $.sourcemaps.write())).pipe(_gulp[\"default\"].dest(config.paths.dist.css)).pipe(_browserSync[\"default\"].reload({\n    stream: true\n  }));\n}\n/* ------------------------------\n *  ## node-sprite-generator (nsg)\n * ------------------------------ */\n\n/**\n * Task-Function\n * Determines all sprite folders inside the sprite-src folder and\n * runs the generateSprite function on each of them.\n */\n\n\nfunction generateNsgSprites(done) {\n  var folders = _glob[\"default\"].sync(_path2[\"default\"].join(config.nsg.sprite_src, '*'), {\n    \"ignore\": ['**/*.ignore']\n  }).filter(function (folder) {\n    if (_fs[\"default\"].statSync(folder).isFile()) {\n      _fancyLog[\"default\"].warn(\"no parent sprite-folder definied. file '\".concat(folder, \"' will be ignored! move image to a new/existing parent and restart the generate task.\"));\n\n      return false;\n    }\n\n    var globImages = _glob[\"default\"].sync(_path2[\"default\"].join(folder, '**/*.{png,jpg,jpeg}'));\n\n    return globImages.length >= 1;\n  }).map(function (folder) {\n    var folderName = folder;\n    var lastFolderIndex = folder.lastIndexOf(_path2[\"default\"].sep) + 1;\n\n    if (folder.length > lastFolderIndex) {\n      folderName = folder.substring(lastFolderIndex);\n    }\n\n    return folderName;\n  });\n\n  folders.forEach( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(folder) {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return generateNsgSprite(folder);\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n  done();\n}\n/**\n * Task-Function\n * Determines all sprite folders inside the sprite-src folder and\n * runs the generateSprite function on each of them.\n */\n\n\nfunction generateNsgSingleSprite() {\n  return generateNsgSprite(null);\n}\n/**\n * Creates and runs the Node-Sprite-Generator on the given folder.\n * Only PNG files will be used for the sprite. The output is a sprite PNG and a\n * SASS source file with all containing image informations.\n * @param folder\n * @returns {*}\n */\n\n\nfunction generateNsgSprite(folder) {\n  var currentSprite = folder;\n\n  if (_typechecks[\"default\"].isEmpty(folder)) {\n    folder = '';\n    currentSprite = 'all-sprites';\n  }\n\n  (0, _fancyLog[\"default\"])('folder: ' + folder);\n  return new _Promise(function (resolve, reject) {\n    (0, _fancyLog[\"default\"])(\"Start generating sprite for '\".concat(currentSprite, \"'.\"));\n    var spriteFilename = \"\".concat(config.nsg.sprite_prefix).concat(currentSprite).concat(config.nsg.sprite_suffix, \".png\");\n\n    var spritePath = _path2[\"default\"].join(config.nsg.sprite_target, spriteFilename);\n\n    var spriteSrc = _path2[\"default\"].join(config.nsg.sprite_src, folder, '**/*.{png,jpg,jpeg}');\n\n    var stylesheetFilename = \"\".concat(config.nsg.stylesheet_prefix).concat(currentSprite).concat(config.nsg.stylesheet_suffix).concat(config.nsg.stylesheet_extension);\n\n    var stylesheetPath = _path2[\"default\"].join(config.nsg.stylesheet_target, stylesheetFilename);\n\n    (0, _fancyLog[\"default\"])('stylesheetPath: ' + stylesheetPath);\n    var stylesheetPrefix = \"-\".concat(config.nsg.sprite_prefix).concat(currentSprite).concat(config.nsg.sprite_suffix, \"-\");\n    var stylesheetSpriteUrl = \"src/assets/media/images/sprites/\".concat(spriteFilename);\n    (0, _fancyLog[\"default\"])(_glob[\"default\"].sync(spriteSrc).length);\n    var nsgConfig = {\n      spritePath: spritePath,\n      src: [spriteSrc],\n      stylesheet: config.nsg.stylesheet,\n      stylesheetPath: stylesheetPath,\n      stylesheetOptions: {\n        prefix: stylesheetPrefix,\n        spritePath: stylesheetSpriteUrl\n      },\n      compositor: config.nsg.compositor,\n      layout: config.nsg.layout,\n      layoutOptions: {\n        padding: 30\n      }\n    };\n    (0, _nodeSpriteGenerator[\"default\"])(nsgConfig, function (err) {\n      if (err) {\n        _fancyLog[\"default\"].error(err);\n\n        reject(err);\n      } else {\n        (0, _fancyLog[\"default\"])(\"Sprite for '\".concat(currentSprite, \"' generated!\"));\n        resolve();\n      }\n    });\n  });\n}\n/* ------------------------------\n *  ## Styleguide Functions\n * ------------------------------ */\n\n/**\n * generateStyleGuide\n * @param done\n * Generate a style guide from the Markdown content and HTML template in styleguide\n */\n\n\nfunction generateStyleGuide(done) {\n  var target = _path2[\"default\"].join(config.paths.dist.path, 'doc');\n\n  ensureFolder(target);\n  (0, _styleSherpa[\"default\"])('src/styleguide/index.md', {\n    output: _path2[\"default\"].join(target, 'styleguide.html'),\n    template: 'src/templates/styleguide/template.hbs'\n  }, done);\n}\n/* ------------------------------\n *  ## SVG-Sprite\n * ------------------------------ */\n\n/**\n * generateSvgSpriteSprite\n * @returns {*}\n */\n\n\nfunction generateSvgSpriteSprite() {\n  return _gulp[\"default\"].src(config.svgsprite.src, {\n    \"ignore\": ['**/*.ignore/**']\n  }).pipe($.svgSprite({\n    dest: './',\n    bust: false,\n    mode: {\n      css: {\n        sprite: \"sprites/sprite.css.svg\",\n        layout: config.svgsprite.layout,\n        prefix: \".svgsprite-%s\",\n        dimensions: \"-dims\",\n        mixin: 'sprite',\n        render: {\n          css: {\n            dest: 'css/_svg-sprite.css'\n          },\n          scss: {\n            dest: 'scss/_svg-sprite.scss'\n          },\n          less: {\n            dest: 'less/_svg-sprite.less'\n          },\n          styl: {\n            dest: 'styl/_svg-sprite.styl'\n          }\n        },\n        example: {\n          dest: 'html/svg-sprite-example.html'\n        }\n      }\n    },\n    shape: {\n      spacing: {\n        padding: 1,\n        box: 'padding'\n      }\n    }\n  })).pipe(_gulp[\"default\"].dest('build/svg-sprites'));\n}\n/* ==================================================================================================================\n *  # Tasks\n * ================================================================================================================== */\n\n/**\n * Task: clean-dist\n * runs: clean function\n */\n\n\n_gulp[\"default\"].task('clean', clean);\n/**\n * Task: copy-assets\n * runs: copyAssets function\n */\n\n\n_gulp[\"default\"].task('copy-assets', copyAssets);\n/**\n * Task: copy-images\n * runs: copyImages function\n */\n\n\n_gulp[\"default\"].task('copy-images', copyImages);\n/**\n * Task: copy-init-js\n * runs: copyInitJs function\n */\n\n\n_gulp[\"default\"].task('copy-init-js', copyInitJs);\n/**\n * Task: copy-gsb-modules\n * runs: copyGsbModules function\n */\n\n\n_gulp[\"default\"].task('copy-gsb-modules', copyGsbModules);\n/**\n * Task: generate-js\n * runs: generateJS function\n */\n\n\n_gulp[\"default\"].task('generate-js', generateJS);\n/**\n * Task: generate-pages\n * runs: generatePages function\n */\n\n\n_gulp[\"default\"].task('generate-pages', generatePages);\n/**\n * Task: generate-sass\n * runs: generateSASS function\n */\n\n\n_gulp[\"default\"].task('generate-sass', generateSASS);\n/**\n * Task: generate-resizeimg-scaled-images\n * runs: generateScaledImages function\n */\n\n\n_gulp[\"default\"].task('generate-resizeimg-scaled-images', generateResizeimgScaledImages);\n/**\n * Task: generate-nsg-sprites\n * runs: generateNsgSprites function\n */\n\n\n_gulp[\"default\"].task('generate-nsg-sprites', generateNsgSprites);\n/**\n * Task: generate-nsg-single-sprite\n * runs: generateNsgSingleSprite function\n */\n\n\n_gulp[\"default\"].task('generate-nsg-single-sprite', generateNsgSingleSprite);\n/**\n * Task: generate-svg-sprite\n * runs: generateSvgSpriteSprite function\n */\n\n\n_gulp[\"default\"].task('generate-svgsprite-sprite', generateSvgSpriteSprite);\n/**\n * Task: generate-styleguide\n * runs: generateStyleGuide function\n */\n\n\n_gulp[\"default\"].task('generate-styleguide', generateStyleGuide);\n/**\n * Task: run-server\n * runs: startServer function, watch function\n */\n\n\n_gulp[\"default\"].task('run-server', _gulp[\"default\"].series(startServer, watch));\n/**\n * Task: built\n * runs: generate-sass task, generate-js task, copy-images task\n */\n\n\n_gulp[\"default\"].task('built', _gulp[\"default\"].series('clean', _gulp[\"default\"].parallel('generate-js', 'copy-assets', 'copy-init-js', 'copy-gsb-modules', 'generate-sass', 'copy-images', 'generate-pages'), 'generate-styleguide'));\n/**\n * Task: default\n * runs: built task, run-server task\n */\n\n\n_gulp[\"default\"].task('default', _gulp[\"default\"].series('built', 'run-server'));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"sources":["gulpfile.babel.js"],"names":["resizeImage","require","$","Promise","promise","PRODUCTION","yargs","argv","production","config","loadConfig","configFile","fs","readFileSync","JSON","parse","ensureFolder","dir","bSuccess","typechecks","isEmpty","startsWith","__dirname","path","join","existsSync","mkdirp","sync","isNotEmpty","getFolders","readdirSync","filter","file","statSync","isDirectory","startServer","done","browser","init","server","paths","dist","port","development","reloadServer","reload","watch","gulp","src","assets","copyAssets","on","series","generatePages","resetPages","generateSASS","generateJS","copyInitJs","copyImages","generateStyleGuide","clean","build","pipe","dest","copyGsbModules","imagemin","gifsicle","interlaced","mozjpeg","quality","progressive","optipng","optimizationLevel","svgo","plugins","removeViewBox","cleanupIDs","generateResizeimgScaledImages","files","glob","resizeimg","indexRelativPath","indexOf","absolutPathPrefix","substring","length","filename","dimensionKey","sizes","indexExtension","lastIndexOf","hasOwnProperty","dimension","resizeimgOptions","bHasWidth","isNumeric","width","bHasHeight","height","log","warn","targetPath","target","subFolder","subFoldersEndIndex","isTrue","options","createFolders","targetFilename","isFalse","targetFile","then","buf","writeFileSync","javascript","sourcemaps","concat","babel","uglify","e","console","write","root","layouts","partials","data","helpers","panini","refresh","sass","dartSass","logError","autoprefixer","cssnano","css","stream","generateNsgSprites","folders","nsg","sprite_src","folder","isFile","globImages","map","folderName","lastFolderIndex","sep","forEach","generateNsgSprite","generateNsgSingleSprite","currentSprite","resolve","reject","spriteFilename","sprite_prefix","sprite_suffix","spritePath","sprite_target","spriteSrc","stylesheetFilename","stylesheet_prefix","stylesheet_suffix","stylesheet_extension","stylesheetPath","stylesheet_target","stylesheetPrefix","stylesheetSpriteUrl","nsgConfig","stylesheet","stylesheetOptions","prefix","compositor","layout","layoutOptions","padding","err","error","output","template","generateSvgSpriteSprite","svgsprite","svgSprite","bust","mode","sprite","dimensions","mixin","render","scss","less","styl","example","shape","spacing","box","task","parallel"],"mappings":"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","sourceRoot":"/Users/carstenkraus/Entwicklung/github/nodejs/KN-2022/","sourcesContent":["'use strict';\n\nimport gulp     from 'gulp';\nimport plugins  from 'gulp-load-plugins';\nimport fs       from 'fs';\nimport path     from 'path';\nimport mkdirp   from 'make-dir';\nimport yargs    from 'yargs';\n// TODO: YAML wieder aktivieren, da die YAML config self references und nested values verwenden kann\nimport yaml     from 'js-yaml';\nimport nsg      from 'node-sprite-generator';\nimport promise  from 'es6-promise';\nimport browser  from 'browser-sync';\nimport rimraf   from 'rimraf';\nimport panini   from 'panini';\nimport sherpa   from 'style-sherpa';\n//import typechecks from './gulp/functions/type-checks';\nimport typechecks from '@sgtmurtaugh/typechecks';\nimport glob     from 'glob';\n//import svgSpritesheet from '@mariusgundersen/gulp-svg-spritesheet';\nimport log from 'fancy-log';\n\nconst resizeImage   = require('resize-img');\n\n// Load all Gulp plugins into one variable\nconst $ = plugins({ 'DEBUG': true });\n\n// Promise Definition for Tasks without Streams or existing Promises\nconst Promise = promise.Promise;\n\n// Check for --production flag\nconst PRODUCTION = !!(yargs.argv.production);\n\n// Load settings from settings.yml\n// const { COMPATIBILITY, PORT, UNCSS_OPTIONS, PATHS } = loadConfig();\nconst config = loadConfig();\n\n\n\n/* ==================================================================================================================\n *  # Functions\n * ================================================================================================================== */\n\n/* ------------------------------\n *  ## Helper Functions\n * ------------------------------ */\n\n/**\n * Load the JSON Config\n */\nfunction loadConfig() {\n    // let ymlFile = fs.readFileSync('config.yml', 'utf8');\n    // return yaml.load(ymlFile);\n\n    let configFile = fs.readFileSync('config.json', 'utf-8');\n    return JSON.parse(configFile);\n}\n\n/**\n * Creates the given directy if it not exists.\n * @param dir\n */\nfunction ensureFolder(dir) {\n    let bSuccess = false;\n    if (!typechecks.isEmpty(dir)) {\n        if ( !dir.startsWith( __dirname ) ) {\n            dir = path.join(__dirname, dir);\n        }\n\n        if ( !(bSuccess = fs.existsSync(dir)) ) {\n            const path = mkdirp.sync( dir );\n            if ( typechecks.isNotEmpty(path) ) {\n                bSuccess = true;\n            }\n        }\n    }\n    return bSuccess;\n}\n\n// /**\n//  * Determines all files of a given directory\n//  */\n// function getFiles(dir) {\n//     return fs.readdirSync(dir)\n//         .filter(function (file) {\n//             return fs.statSync(path.join(dir, file)).isFile();\n//         });\n// }\n\n/**\n * Determines all subfolders of a given directory\n */\nfunction getFolders(dir) {\n    return fs.readdirSync(dir)\n        .filter(function (file) {\n            return fs.statSync(path.join(dir, file)).isDirectory();\n        });\n}\n\n\n/* ------------------------------\n *  ## Browser Functions\n * ------------------------------ */\n\n/**\n * Start a server with BrowserSync to preview the site in\n * @param done\n */\nfunction startServer(done) {\n    browser.init({\n        server: config.paths.dist.path,\n        port: config.development.server.port\n    });\n    done();\n}\n\n/**\n * Reload the browser with BrowserSync\n */\nfunction reloadServer(done) {\n    browser.reload();\n    done();\n}\n\n/**\n * Watch for changes to static assets, pages, Sass, and JavaScript\n * @param done\n */\nfunction watch(done) {\n    gulp.watch(config.paths.src.assets, copyAssets);\n    gulp.watch('src/pages/**/*.html').on('change', gulp.series(generatePages, browser.reload));\n    gulp.watch('src/{layouts,partials}/**/{*.html,*.hbs}').on('change', gulp.series(resetPages, generatePages, browser.reload));\n    gulp.watch('src/assets/scss/**/*.scss', generateSASS);\n    gulp.watch('src/assets/js/**/*.js').on('change', gulp.series(generateJS, copyInitJs, browser.reload));\n    gulp.watch('src/assets/img/**/*').on('change', gulp.series(copyImages, browser.reload));\n    gulp.watch('src/styleguide/**').on('change', gulp.series(generateStyleGuide, browser.reload));\n    done();\n}\n\n\n/* ------------------------------\n *  ## Build Functions\n * ------------------------------ */\n\n/**\n * clean\n * @param done\n * Deletes dist and build folder\n * This happens every time a build starts\n */\nfunction clean(done) {\n    rimraf(config.paths.dist.path, done);\n    rimraf(config.paths.build.path, done);\n}\n\n/**\n * copyAssets\n * @returns {*}\n * Copy files out of the assets folder\n * This task skips over the \"img\", \"js\", and \"scss\" folders, which are parsed separately\n */\nfunction copyAssets() {\n    return gulp.src([\n        \"src/assets/**/*\",\n        \"!src/assets/media/images{,/**}\",\n        \"!src/assets/js{,/**}\",\n        \"!src/assets/scss{,/**}\"\n    ]).pipe(gulp.dest(\n        path.join(config.paths.dist.path, config.paths.dist.assets)\n    ));\n}\n\n/**\n * TODO\n * @returns {*}\n */\nfunction copyInitJs() {\n    return gulp.src(\"src/assets/vendors/gsb/js/init.js\").pipe(path.join(gulp.dest(config.paths.dist.path, config.paths.dist.assets, 'js')));\n}\n\n/**\n * TODO\n * @returns {*}\n */\nfunction copyGsbModules() {\n    return gulp.src(\"src/assets/vendors/gsb/js/gsb/**/*.js\").pipe(gulp.dest(path.join(config.paths.dist.path, config.paths.dist.assets, '/js/gsb')));\n}\n\n/**\n * Copy images to the \"dist\" folder.\n * In production, the images are compressed\n * //TODO: Hier muessen alle src Ordner ignoriert werden! Leider greift die Logik hier noch nicht\n */\nfunction copyImages() {\n    return gulp.src([\n        'src/assets/media/images/**'\n    ]).pipe($.if(PRODUCTION, $.imagemin(\n        [\n            $.imagemin.gifsicle({interlaced: true}),\n            $.imagemin.mozjpeg({quality: 75, progressive: true}),\n            $.imagemin.optipng({optimizationLevel: 5}),\n            $.imagemin.svgo({\n                plugins: [\n                    {removeViewBox: true},\n                    {cleanupIDs: false}\n                ]\n            })\n        ]\n        /** gulp-imigemin groesser 3\n        {\n            progressive: true\n        }\n         */\n    ))).pipe(gulp.dest('dist/assets/media/images'));\n}\n\n\n/* ------------------------------\n *  ## resizeimg\n * ------------------------------ */\n\n/**\n * generateResizeimgScaledImages\n * @param done\n */\nfunction generateResizeimgScaledImages(done) {\n    let files = glob.sync(\n        config.resizeimg.src,\n        {\n            \"absolute\": true,\n            \"ignore\": ['**/*.ignore/**']\n        }\n    );\n\n    for (let file of files) {\n        if (typechecks.isNotEmpty(file)) {\n            let indexRelativPath = file.indexOf(config.resizeimg.path);\n\n            if (indexRelativPath > -1) {\n                let absolutPathPrefix = \"\";\n                if (indexRelativPath > 0) {\n                    absolutPathPrefix = file.substring(0, indexRelativPath);\n                }\n\n                if (file.length > indexRelativPath) {\n                    let filename = file.substring(indexRelativPath + config.resizeimg.path.length);\n\n                    for( let dimensionKey in config.resizeimg.sizes ) {\n                        let indexExtension = filename.lastIndexOf('.');\n\n                        if (indexExtension > -1) {\n                            if (config.resizeimg.sizes.hasOwnProperty(dimensionKey)) {\n                                let dimension = config.resizeimg.sizes[dimensionKey];\n\n                                if (typechecks.isNotEmpty(dimension)) {\n                                    // check configured height / widht\n                                    let resizeimgOptions = {};\n                                    let bHasWidth = typechecks.isNumeric(dimension.width);\n                                    let bHasHeight = typechecks.isNumeric(dimension.height);\n\n                                    if (!bHasWidth && !bHasHeight) {\n                                        log.warn(`size '${dimensionKey}' has no height and width!`);\n                                        continue;\n                                    }\n\n\n                                    // set auto dimension for missing config\n                                    if (!bHasWidth) {\n                                        // dimension.width = -1;\n                                        dimension.width = \"auto\";\n                                    }\n                                    if (!bHasHeight) {\n                                        // dimension.height = -1;\n                                        dimension.height = \"auto\";\n                                    }\n\n\n                                    // create targetFolder\n                                    let targetPath = path.join(absolutPathPrefix, config.resizeimg.target);\n                                    let subFolder = \"\";\n\n                                    // SubFolder check\n                                    let subFoldersEndIndex = filename.lastIndexOf('/');\n                                    if (subFoldersEndIndex > -1) {\n                                        subFolder = filename.substring(0, subFoldersEndIndex);\n                                    }\n\n                                    targetPath = path.join(targetPath, subFolder);\n                                    if (typechecks.isTrue(config.resizeimg.options.createFolders)) {\n                                        targetPath = path.join(targetPath, dimensionKey);\n                                    }\n                                    ensureFolder(targetPath);\n\n\n                                    // create Filename\n                                    let targetFilename = \"\";\n                                    if (subFoldersEndIndex > -1) {\n                                        targetFilename = filename.substring(subFoldersEndIndex, indexExtension);\n                                    }\n                                    else {\n                                        targetFilename = filename.substring(0, indexExtension);\n                                    }\n\n                                    if (typechecks.isFalse(config.resizeimg.options.createFolders)) {\n                                        targetFilename += '_';\n                                        targetFilename += dimensionKey;\n                                    }\n\n                                    targetFilename += filename.substring(indexExtension);\n\n                                    let targetFile = path.join(targetPath, targetFilename);\n\n\n                                    // create resizeimg options\n                                    if (typechecks.isNumeric(dimension.width)) {\n                                        resizeimgOptions['width'] = dimension.width;\n                                    }\n                                    if (typechecks.isNumeric(dimension.height)) {\n                                        resizeimgOptions['height'] = dimension.height;\n                                    }\n\n\n                                    // generate resized images\n                                    resizeImage(fs.readFileSync(file), resizeimgOptions).then(buf => {\n                                        fs.writeFileSync(targetFile, buf);\n                                    });\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    done();\n}\n\n\n/* ------------------------------\n *  ## JavaScript Functions\n * ------------------------------ */\n\n/**\n * Combine JavaScript into one file\n * In production, the file is minified\n */\nfunction generateJS() {\n    return gulp.src(config.paths.src.javascript)\n        .pipe($.sourcemaps.init())\n        .pipe($.concat('app.js'))\n        .pipe($.babel())\n        .pipe($.if(PRODUCTION, $.uglify()\n            .on('error', e => { console.log(e); })\n        ))\n        .pipe($.if(!PRODUCTION, $.sourcemaps.write()))\n        .pipe(gulp.dest(config.paths.dist.javascript));\n}\n\n\n/* ------------------------------\n *  ## Pages Functions\n * ------------------------------ */\n\n/**\n * Copy page templates into finished HTML files\n * @returns {*}\n */\nfunction generatePages() {\n    return gulp.src('src/pages/**/*.{html,hbs,handlebars}')\n        .pipe(panini({\n            root: 'src/pages/',\n            layouts: 'src/layouts/',\n            partials: 'src/partials/',\n            data: 'src/data/',\n            helpers: 'src/helpers/'\n        }))\n        .pipe(gulp.dest(config.paths.dist.path));\n}\n\n/**\n * resetPages\n * @param done\n * Load updated HTML templates and partials into Panini\n */\nfunction resetPages(done) {\n    panini.refresh();\n    done();\n}\n\n\n/* ------------------------------\n *  ## SASS Functions\n * ------------------------------ */\n\n/**\n * Compile Sass into CSS\n * In production, the CSS is compressed\n */\nfunction generateSASS() {\n    return gulp.src(config.paths.src.sass)\n        .pipe($.sourcemaps.init())\n        .pipe($.dartSass().on('error', $.dartSass.logError))\n        .pipe($.autoprefixer())\n        // Comment in the pipe below to run UnCSS in production\n        // .pipe($.if(PRODUCTION, $.uncss(UNCSS_OPTIONS)))\n        .pipe($.if(PRODUCTION, $.cssnano()))\n        .pipe($.if(!PRODUCTION, $.sourcemaps.write()))\n        .pipe(gulp.dest(config.paths.dist.css))\n        .pipe(browser.reload({ stream: true }));\n}\n\n\n/* ------------------------------\n *  ## node-sprite-generator (nsg)\n * ------------------------------ */\n\n/**\n * Task-Function\n * Determines all sprite folders inside the sprite-src folder and\n * runs the generateSprite function on each of them.\n */\nfunction generateNsgSprites(done) {\n    let folders = glob.sync(path.join(config.nsg.sprite_src, '*'), {\n        \"ignore\": ['**/*.ignore']\n\n    }).filter(function (folder) {\n        if (fs.statSync(folder).isFile()) {\n            log.warn(`no parent sprite-folder definied. file '${folder}' will be ignored! move image to a new/existing parent and restart the generate task.`);\n            return false;\n        }\n\n        let globImages = glob.sync( path.join(folder, '**/*.{png,jpg,jpeg}' ));\n        return (globImages.length >= 1);\n\n    }).map(function (folder) {\n        let folderName = folder;\n        let lastFolderIndex = folder.lastIndexOf(path.sep) + 1;\n\n        if ( folder.length > lastFolderIndex ) {\n            folderName = folder.substring(lastFolderIndex);\n        }\n        return folderName;\n\n    });\n\n    folders.forEach( async function (folder) {\n        return await generateNsgSprite(folder);\n    });\n    done();\n}\n\n/**\n * Task-Function\n * Determines all sprite folders inside the sprite-src folder and\n * runs the generateSprite function on each of them.\n */\nfunction generateNsgSingleSprite() {\n    return generateNsgSprite(null);\n}\n\n/**\n * Creates and runs the Node-Sprite-Generator on the given folder.\n * Only PNG files will be used for the sprite. The output is a sprite PNG and a\n * SASS source file with all containing image informations.\n * @param folder\n * @returns {*}\n */\nfunction generateNsgSprite(folder) {\n    let currentSprite = folder;\n    if (typechecks.isEmpty(folder)) {\n        folder = '';\n        currentSprite = 'all-sprites';\n    }\nlog('folder: ' +folder );\n    return new Promise(function(resolve, reject) {\n        log(`Start generating sprite for '${currentSprite}'.`);\n\n        let spriteFilename = `${config.nsg.sprite_prefix}${currentSprite}${config.nsg.sprite_suffix}.png`;\n        let spritePath = path.join(config.nsg.sprite_target, spriteFilename);\n        let spriteSrc = path.join(config.nsg.sprite_src, folder, '**/*.{png,jpg,jpeg}');\n        let stylesheetFilename =`${config.nsg.stylesheet_prefix}${currentSprite}${config.nsg.stylesheet_suffix}${config.nsg.stylesheet_extension}`;\n        let stylesheetPath = path.join(config.nsg.stylesheet_target, stylesheetFilename);\n        log('stylesheetPath: '+stylesheetPath);\n        let stylesheetPrefix = `-${config.nsg.sprite_prefix}${currentSprite}${config.nsg.sprite_suffix}-`;\n        let stylesheetSpriteUrl = `src/assets/media/images/sprites/${spriteFilename}`;\n\nlog(glob.sync(spriteSrc).length);\n\n\n        const nsgConfig = {\n            spritePath: spritePath,\n            src: [spriteSrc],\n            stylesheet: config.nsg.stylesheet,\n            stylesheetPath: stylesheetPath,\n            stylesheetOptions: {\n                prefix: stylesheetPrefix,\n                spritePath: stylesheetSpriteUrl\n            },\n            compositor: config.nsg.compositor,\n            layout: config.nsg.layout,\n            layoutOptions: {\n                padding: 30\n            }\n        };\n\n        nsg( nsgConfig, function (err) {\n            if (err) {\n                log.error(err);\n                reject(err);\n            }\n            else {\n                log(`Sprite for '${currentSprite}' generated!`);\n                resolve();\n            }\n        });\n    });\n}\n\n\n/* ------------------------------\n *  ## Styleguide Functions\n * ------------------------------ */\n\n/**\n * generateStyleGuide\n * @param done\n * Generate a style guide from the Markdown content and HTML template in styleguide\n */\nfunction generateStyleGuide(done) {\n    let target = path.join(config.paths.dist.path, 'doc');\n    ensureFolder(target);\n    sherpa('src/styleguide/index.md',\n        {\n            output: path.join(target, 'styleguide.html'),\n            template: 'src/templates/styleguide/template.hbs'\n        },\n        done\n    );\n}\n\n\n/* ------------------------------\n *  ## SVG-Sprite\n * ------------------------------ */\n\n/**\n * generateSvgSpriteSprite\n * @returns {*}\n */\nfunction generateSvgSpriteSprite() {\n    return gulp.src(config.svgsprite.src, {\n        \"ignore\": ['**/*.ignore/**']\n    }).pipe($.svgSprite({\n        dest: './',\n        bust: false,\n        mode: {\n            css: {\n                sprite: \"sprites/sprite.css.svg\",\n                layout: config.svgsprite.layout,\n                prefix: \".svgsprite-%s\",\n                dimensions: \"-dims\",\n                mixin: 'sprite',\n                render: {\n                    css: {\n                        dest: 'css/_svg-sprite.css'\n                    },\n                    scss: {\n                        dest: 'scss/_svg-sprite.scss'\n                    },\n                    less: {\n                        dest: 'less/_svg-sprite.less'\n                    },\n                    styl: {\n                        dest: 'styl/_svg-sprite.styl'\n                    }\n                },\n                example: {\n                    dest: 'html/svg-sprite-example.html'\n                }\n            },\n        },\n        shape: {\n            spacing: {\n                padding: 1,\n                box: 'padding'\n            }\n        }\n    })).pipe(gulp.dest('build/svg-sprites'));\n}\n\n\n\n/* ==================================================================================================================\n *  # Tasks\n * ================================================================================================================== */\n\n/**\n * Task: clean-dist\n * runs: clean function\n */\ngulp.task('clean', clean );\n\n/**\n * Task: copy-assets\n * runs: copyAssets function\n */\ngulp.task('copy-assets', copyAssets );\n\n/**\n * Task: copy-images\n * runs: copyImages function\n */\ngulp.task('copy-images', copyImages );\n\n/**\n * Task: copy-init-js\n * runs: copyInitJs function\n */\ngulp.task('copy-init-js', copyInitJs );\n\n/**\n * Task: copy-gsb-modules\n * runs: copyGsbModules function\n */\ngulp.task('copy-gsb-modules', copyGsbModules );\n\n/**\n * Task: generate-js\n * runs: generateJS function\n */\ngulp.task('generate-js', generateJS );\n\n/**\n * Task: generate-pages\n * runs: generatePages function\n */\ngulp.task('generate-pages', generatePages );\n\n/**\n * Task: generate-sass\n * runs: generateSASS function\n */\ngulp.task('generate-sass', generateSASS );\n\n/**\n * Task: generate-resizeimg-scaled-images\n * runs: generateScaledImages function\n */\ngulp.task('generate-resizeimg-scaled-images', generateResizeimgScaledImages );\n\n/**\n * Task: generate-nsg-sprites\n * runs: generateNsgSprites function\n */\ngulp.task('generate-nsg-sprites', generateNsgSprites );\n\n/**\n * Task: generate-nsg-single-sprite\n * runs: generateNsgSingleSprite function\n */\ngulp.task('generate-nsg-single-sprite', generateNsgSingleSprite );\n\n/**\n * Task: generate-svg-sprite\n * runs: generateSvgSpriteSprite function\n */\ngulp.task('generate-svgsprite-sprite', generateSvgSpriteSprite );\n\n/**\n * Task: generate-styleguide\n * runs: generateStyleGuide function\n */\ngulp.task('generate-styleguide', generateStyleGuide );\n\n/**\n * Task: run-server\n * runs: startServer function, watch function\n */\ngulp.task('run-server',\n    gulp.series(\n        startServer,\n        watch\n    )\n);\n\n\n/**\n * Task: built\n * runs: generate-sass task, generate-js task, copy-images task\n */\ngulp.task('built',\n    gulp.series(\n        'clean',\n        gulp.parallel(\n            'generate-js',\n            'copy-assets',\n            'copy-init-js',\n            'copy-gsb-modules',\n            'generate-sass',\n            'copy-images',\n            'generate-pages'\n        ),\n        'generate-styleguide'\n    )\n);\n\n\n/**\n * Task: default\n * runs: built task, run-server task\n */\ngulp.task('default',\n    gulp.series(\n        'built',\n        'run-server'\n    )\n);\n"]}},"mtime":1649616156588}}