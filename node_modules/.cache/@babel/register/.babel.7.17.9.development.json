{"{\"assumptions\":{},\"sourceRoot\":\"/Users/carstenkraus/Entwicklung/github/nodejs/KN-2022/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/carstenkraus/Entwicklung/github/nodejs/KN-2022\",\"filename\":\"/Users/carstenkraus/Entwicklung/github/nodejs/KN-2022/gulpfile.babel.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/carstenkraus/Entwicklung/github/nodejs/KN-2022\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.17.9:development":{"value":{"code":"'use strict';\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpLoadPlugins = _interopRequireDefault(require(\"gulp-load-plugins\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _path2 = _interopRequireDefault(require(\"path\"));\n\nvar _makeDir = _interopRequireDefault(require(\"make-dir\"));\n\nvar _yargs = _interopRequireDefault(require(\"yargs\"));\n\nvar _jsYaml = _interopRequireDefault(require(\"js-yaml\"));\n\nvar _nodeSpriteGenerator = _interopRequireDefault(require(\"node-sprite-generator\"));\n\nvar _es6Promise = _interopRequireDefault(require(\"es6-promise\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _rimraf = _interopRequireDefault(require(\"rimraf\"));\n\nvar _panini = _interopRequireDefault(require(\"panini\"));\n\nvar _styleSherpa = _interopRequireDefault(require(\"style-sherpa\"));\n\nvar _typechecks = _interopRequireDefault(require(\"@sgtmurtaugh/typechecks\"));\n\nvar _glob = _interopRequireDefault(require(\"glob\"));\n\nvar _fancyLog = _interopRequireDefault(require(\"fancy-log\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar resizeImage = require('resize-img'); // Load all Gulp plugins into one variable\n\n\nvar $ = (0, _gulpLoadPlugins[\"default\"])({\n  'DEBUG': true\n}); // Promise Definition for Tasks without Streams or existing Promises\n\nvar _Promise = _es6Promise[\"default\"].Promise; // Check for --production flag\n\nvar PRODUCTION = !!_yargs[\"default\"].argv.production; // Load settings from settings.yml\n// const { COMPATIBILITY, PORT, UNCSS_OPTIONS, PATHS } = loadConfig();\n\nvar config = loadConfig();\n/* ==================================================================================================================\n *  # Functions\n * ================================================================================================================== */\n\n/* ------------------------------\n *  ## Helper Functions\n * ------------------------------ */\n\n/**\n * Load the JSON Config\n */\n\nfunction loadConfig() {\n  // let ymlFile = fs.readFileSync('config.yml', 'utf8');\n  // return yaml.load(ymlFile);\n  var configFile = _fs[\"default\"].readFileSync('config.json', 'utf-8');\n\n  return JSON.parse(configFile);\n}\n/**\n * Creates the given directy if it not exists.\n * @param dir\n */\n\n\nfunction ensureFolder(dir) {\n  var bSuccess = false;\n\n  if (!_typechecks[\"default\"].isEmpty(dir)) {\n    if (!dir.startsWith(__dirname)) {\n      dir = _path2[\"default\"].join(__dirname, dir);\n    }\n\n    if (!(bSuccess = _fs[\"default\"].existsSync(dir))) {\n      var _path = _makeDir[\"default\"].sync(dir);\n\n      if (_typechecks[\"default\"].isNotEmpty(_path)) {\n        bSuccess = true;\n      }\n    }\n  }\n\n  return bSuccess;\n} // /**\n//  * Determines all files of a given directory\n//  */\n// function getFiles(dir) {\n//     return fs.readdirSync(dir)\n//         .filter(function (file) {\n//             return fs.statSync(path.join(dir, file)).isFile();\n//         });\n// }\n\n/**\n * Determines all subfolders of a given directory\n */\n\n\nfunction getFolders(dir) {\n  return _fs[\"default\"].readdirSync(dir).filter(function (file) {\n    return _fs[\"default\"].statSync(_path2[\"default\"].join(dir, file)).isDirectory();\n  });\n}\n/* ------------------------------\n *  ## Browser Functions\n * ------------------------------ */\n\n/**\n * Start a server with BrowserSync to preview the site in\n * @param done\n */\n\n\nfunction startServer(done) {\n  _browserSync[\"default\"].init({\n    server: config.paths.dist.path,\n    port: config.development.server.port\n  });\n\n  done();\n}\n/**\n * Reload the browser with BrowserSync\n */\n\n\nfunction reloadServer(done) {\n  _browserSync[\"default\"].reload();\n\n  done();\n}\n/**\n * Watch for changes to static assets, pages, Sass, and JavaScript\n * @param done\n */\n\n\nfunction watch(done) {\n  _gulp[\"default\"].watch(config.paths.src.assets, copyAssets);\n\n  _gulp[\"default\"].watch('src/pages/**/*.html').on('change', _gulp[\"default\"].series(generatePages, _browserSync[\"default\"].reload));\n\n  _gulp[\"default\"].watch('src/{layouts,partials}/**/{*.html,*.hbs}').on('change', _gulp[\"default\"].series(resetPages, generatePages, _browserSync[\"default\"].reload));\n\n  _gulp[\"default\"].watch('src/assets/scss/**/*.scss', generateSASS);\n\n  _gulp[\"default\"].watch('src/assets/js/**/*.js').on('change', _gulp[\"default\"].series(generateJS, copyInitJs, _browserSync[\"default\"].reload));\n\n  _gulp[\"default\"].watch('src/assets/img/**/*').on('change', _gulp[\"default\"].series(copyImages, _browserSync[\"default\"].reload));\n\n  _gulp[\"default\"].watch('src/styleguide/**').on('change', _gulp[\"default\"].series(generateStyleGuide, _browserSync[\"default\"].reload));\n\n  done();\n}\n/* ------------------------------\n *  ## Build Functions\n * ------------------------------ */\n\n/**\n * clean\n * @param done\n * Deletes dist and build folder\n * This happens every time a build starts\n */\n\n\nfunction clean(done) {\n  (0, _rimraf[\"default\"])(config.paths.dist.path, done);\n  (0, _rimraf[\"default\"])(config.paths.build.path, done);\n}\n/**\n * copyAssets\n * @returns {*}\n * Copy files out of the assets folder\n * This task skips over the \"img\", \"js\", and \"scss\" folders, which are parsed separately\n */\n\n\nfunction copyAssets() {\n  return _gulp[\"default\"].src([\"src/assets/**/*\", \"!src/assets/img{,/**}\", \"!src/assets/img-src{,/**}\", \"!src/assets/js{,/**}\", \"!src/assets/scss{,/**}\"]).pipe(_gulp[\"default\"].dest(config.paths.dist.path + '/' + config.paths.dist.assets));\n}\n/**\n * TODO\n * @returns {*}\n */\n\n\nfunction copyInitJs() {\n  return _gulp[\"default\"].src(\"src/assets/vendors/gsb/js/init.js\").pipe(_gulp[\"default\"].dest(config.paths.dist.path + '/' + config.paths.dist.assets + '/js'));\n}\n/**\n * TODO\n * @returns {*}\n */\n\n\nfunction copyGsbModules() {\n  return _gulp[\"default\"].src(\"src/assets/vendors/gsb/js/gsb/**/*.js\").pipe(_gulp[\"default\"].dest(config.paths.dist.path + '/' + config.paths.dist.assets + '/js/gsb'));\n}\n/**\n * Copy images to the \"dist\" folder.\n * In production, the images are compressed\n * //TODO: Hier muessen alle src Ordner ignoriert werden! Leider greift die Logik hier noch nicht\n */\n\n\nfunction copyImages() {\n  return _gulp[\"default\"].src(['src/assets/img/**']).pipe($[\"if\"](PRODUCTION, $.imagemin([$.imagemin.gifsicle({\n    interlaced: true\n  }), $.imagemin.mozjpeg({\n    quality: 75,\n    progressive: true\n  }), $.imagemin.optipng({\n    optimizationLevel: 5\n  }), $.imagemin.svgo({\n    plugins: [{\n      removeViewBox: true\n    }, {\n      cleanupIDs: false\n    }]\n  })]\n  /** gulp-imigemin groesser 3\n   {\n      progressive: true\n  }\n   */\n  ))).pipe(_gulp[\"default\"].dest('dist/assets/img'));\n}\n/* ------------------------------\n *  ## Image Scaler Functions\n * ------------------------------ */\n\n/**\n * generateScaledImages\n * @param done\n */\n\n\nfunction generateScaledImages(done) {\n  var files = _glob[\"default\"].sync(config.resizeimg.src, {\n    \"absolute\": true,\n    \"ignore\": ['**/*.ignore/**']\n  });\n\n  var _iterator = _createForOfIteratorHelper(files),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var file = _step.value;\n\n      if (_typechecks[\"default\"].isNotEmpty(file)) {\n        var indexRelativPath = file.indexOf(config.resizeimg.path);\n\n        if (indexRelativPath > -1) {\n          var absolutPathPrefix = \"\";\n\n          if (indexRelativPath > 0) {\n            absolutPathPrefix = file.substring(0, indexRelativPath);\n          }\n\n          if (file.length > indexRelativPath) {\n            var filename = file.substring(indexRelativPath + config.resizeimg.path.length);\n\n            for (var dimensionKey in config.resizeimg.sizes) {\n              var indexExtension = filename.lastIndexOf('.');\n\n              if (indexExtension > -1) {\n                if (config.resizeimg.sizes.hasOwnProperty(dimensionKey)) {\n                  var dimension = config.resizeimg.sizes[dimensionKey];\n\n                  if (_typechecks[\"default\"].isNotEmpty(dimension)) {\n                    var _ret = function () {\n                      // check configured height / widht\n                      var resizeimgOptions = {};\n\n                      var bHasWidth = _typechecks[\"default\"].isNumeric(dimension.width);\n\n                      var bHasHeight = _typechecks[\"default\"].isNumeric(dimension.height);\n\n                      if (!bHasWidth && !bHasHeight) {\n                        (0, _fancyLog[\"default\"])(\"size '${dimensionKey}' besitzt weder eine Hoehen noch eine Breitenangabe!\");\n                        return \"continue\";\n                      } // set auto dimension for missing config\n\n\n                      if (!bHasWidth) {\n                        // dimension.width = -1;\n                        dimension.width = \"auto\";\n                      }\n\n                      if (!bHasHeight) {\n                        // dimension.height = -1;\n                        dimension.height = \"auto\";\n                      } // create targetFolder\n\n\n                      var targetPath = _path2[\"default\"].join(absolutPathPrefix, config.resizeimg.target);\n\n                      var subFolder = \"\"; // SubFolder check\n\n                      var subFoldersEndIndex = filename.lastIndexOf('/');\n\n                      if (subFoldersEndIndex > -1) {\n                        subFolder = filename.substring(0, subFoldersEndIndex);\n                      }\n\n                      targetPath = _path2[\"default\"].join(targetPath, subFolder);\n\n                      if (_typechecks[\"default\"].isTrue(config.resizeimg.options.createFolders)) {\n                        targetPath = _path2[\"default\"].join(targetPath, dimensionKey);\n                      }\n\n                      ensureFolder(targetPath); // create Filename\n\n                      var targetFilename = \"\";\n\n                      if (subFoldersEndIndex > -1) {\n                        targetFilename = filename.substring(subFoldersEndIndex, indexExtension);\n                      } else {\n                        targetFilename = filename.substring(0, indexExtension);\n                      }\n\n                      if (_typechecks[\"default\"].isFalse(config.resizeimg.options.createFolders)) {\n                        targetFilename += '_';\n                        targetFilename += dimensionKey;\n                      }\n\n                      targetFilename += filename.substring(indexExtension);\n\n                      var targetFile = _path2[\"default\"].join(targetPath, targetFilename);\n\n                      (0, _fancyLog[\"default\"])('targetFile ' + targetFile); // create resizeimg options\n\n                      if (_typechecks[\"default\"].isNumeric(dimension.width)) {\n                        resizeimgOptions['width'] = dimension.width;\n                      }\n\n                      if (_typechecks[\"default\"].isNumeric(dimension.height)) {\n                        resizeimgOptions['height'] = dimension.height;\n                      } // generate resized images\n\n\n                      resizeImage(_fs[\"default\"].readFileSync(file), resizeimgOptions).then(function (buf) {\n                        _fs[\"default\"].writeFileSync(targetFile, buf);\n                      });\n                    }();\n\n                    if (_ret === \"continue\") continue;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  done();\n}\n/* ------------------------------\n *  ## JavaScript Functions\n * ------------------------------ */\n\n/**\n * Combine JavaScript into one file\n * In production, the file is minified\n */\n\n\nfunction generateJS() {\n  return _gulp[\"default\"].src(config.paths.src.javascript).pipe($.sourcemaps.init()).pipe($.concat('app.js')).pipe($.babel()).pipe($[\"if\"](PRODUCTION, $.uglify().on('error', function (e) {\n    console.log(e);\n  }))).pipe($[\"if\"](!PRODUCTION, $.sourcemaps.write())).pipe(_gulp[\"default\"].dest(config.paths.dist.javascript));\n}\n/* ------------------------------\n *  ## Pages Functions\n * ------------------------------ */\n\n/**\n * Copy page templates into finished HTML files\n * @returns {*}\n */\n\n\nfunction generatePages() {\n  return _gulp[\"default\"].src('src/pages/**/*.{html,hbs,handlebars}').pipe((0, _panini[\"default\"])({\n    root: 'src/pages/',\n    layouts: 'src/layouts/',\n    partials: 'src/partials/',\n    data: 'src/data/',\n    helpers: 'src/helpers/'\n  })).pipe(_gulp[\"default\"].dest(config.paths.dist.path));\n}\n/**\n * resetPages\n * @param done\n * Load updated HTML templates and partials into Panini\n */\n\n\nfunction resetPages(done) {\n  _panini[\"default\"].refresh();\n\n  done();\n}\n/* ------------------------------\n *  ## SASS Functions\n * ------------------------------ */\n\n/**\n * Compile Sass into CSS\n * In production, the CSS is compressed\n */\n\n\nfunction generateSASS() {\n  return _gulp[\"default\"].src(config.paths.src.sass).pipe($.sourcemaps.init()).pipe($.dartSass().on('error', $.dartSass.logError)).pipe($.autoprefixer()) // Comment in the pipe below to run UnCSS in production\n  // .pipe($.if(PRODUCTION, $.uncss(UNCSS_OPTIONS)))\n  .pipe($[\"if\"](PRODUCTION, $.cssnano())).pipe($[\"if\"](!PRODUCTION, $.sourcemaps.write())).pipe(_gulp[\"default\"].dest(config.paths.dist.css)).pipe(_browserSync[\"default\"].reload({\n    stream: true\n  }));\n}\n/* ------------------------------\n *  ## Sprite Functions\n * ------------------------------ */\n\n/**\n * Task-Function\n * Determines all sprite folders inside the sprite-src folder and\n * runs the generateSprite function on each of them.\n */\n\n\nfunction generateSprites(done) {\n  var folders = _glob[\"default\"].sync(_path2[\"default\"].join(config.nsg.sprite_src, '*'), {\n    \"ignore\": ['**/*.ignore']\n  }).filter(function (folder) {\n    if (_fs[\"default\"].statSync(folder).isFile()) {\n      (0, _fancyLog[\"default\"])(\"no parent sprite-folder definied. file '\".concat(folder, \"' will be ignored!\"));\n      return false;\n    }\n\n    var globImages = _glob[\"default\"].sync(folder + '**/*.{png,jpg,jpeg}');\n\n    return globImages.length >= 1;\n  }).map(function (folder) {\n    var folderName = folder;\n    var lastFolderIndex = folder.lastIndexOf(_path2[\"default\"].sep) + 1;\n\n    if (folder.length > lastFolderIndex) {\n      folderName = folder.substring(lastFolderIndex);\n    }\n\n    return folderName;\n  });\n\n  folders.forEach( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(folder) {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return generateSprite(folder);\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n  done();\n}\n/**\n * Task-Function\n * Determines all sprite folders inside the sprite-src folder and\n * runs the generateSprite function on each of them.\n */\n\n\nfunction generateSingleSprite() {\n  return generateSprite(null);\n}\n/**\n * Creates and runs the Node-Sprite-Generator on the given folder.\n * Only PNG files will be used for the sprite. The output is a sprite PNG and a\n * SASS source file with all containing image informations.\n * @param folder\n * @returns {*}\n */\n\n\nfunction generateSprite(folder) {\n  var currentSprite = folder;\n\n  if (_typechecks[\"default\"].isEmpty(folder)) {\n    folder = '';\n    currentSprite = 'all-sprites';\n  }\n\n  return new _Promise(function (resolve, reject) {\n    (0, _fancyLog[\"default\"])(\"Start generating sprite for '\".concat(currentSprite, \"'.\"));\n    var spriteName = \"-\".concat(config.nsg.sprite_prefix).concat(currentSprite).concat(config.nsg.sprite_suffix, \"-\");\n    var spriteFilename = \"\".concat(config.nsg.sprite_prefix).concat(currentSprite).concat(config.nsg.sprite_suffix, \".png\");\n    var stylesheetFilename = \"\".concat(config.nsg.stylesheet_prefix).concat(currentSprite).concat(config.nsg.stylesheet_suffix).concat(config.nsg.stylesheet_extension);\n    var nsgConfig = {\n      spritePath: _path2[\"default\"].join(config.nsg.sprite_target, spriteFilename),\n      src: [_path2[\"default\"].join(config.nsg.sprite_src, folder, '**/*.{png,jpg,jpeg}')],\n      stylesheet: 'scss',\n      stylesheetPath: _path2[\"default\"].join(config.nsg.stylesheet_target, stylesheetFilename),\n      stylesheetOptions: {\n        prefix: spriteName,\n        spritePath: \"src/assets/img/sprites/\".concat(spriteFilename)\n      },\n      compositor: 'jimp',\n      layout: config.nsg.layout,\n      layoutOptions: {\n        padding: 30\n      }\n    };\n    (0, _nodeSpriteGenerator[\"default\"])(nsgConfig, function (err) {\n      if (err) {\n        reject(err);\n      } else {\n        (0, _fancyLog[\"default\"])(\"Sprite for '\".concat(currentSprite, \"' generated!\"));\n        resolve();\n      }\n    });\n    resolve();\n  });\n}\n/* ------------------------------\n *  ## Styleguide Functions\n * ------------------------------ */\n\n/**\n * generateStyleGuide\n * @param done\n * Generate a style guide from the Markdown content and HTML template in styleguide\n */\n\n\nfunction generateStyleGuide(done) {\n  var target = config.paths.dist.path + '/doc';\n  ensureFolder(target);\n  (0, _styleSherpa[\"default\"])('src/styleguide/index.md', {\n    output: target + '/styleguide.html',\n    template: 'src/templates/styleguide/template.hbs'\n  }, done);\n}\n/* ------------------------------\n *  ## SVG Sprite Functions\n * ------------------------------ */\n\n/**\n * generateSvgSprite\n * @returns {*}\n */\n\n\nfunction generateSvgSprite() {\n  return _gulp[\"default\"].src(config.svgsprite.src, {\n    \"ignore\": ['**/*.ignore/**']\n  }).pipe($.svgSprite({\n    dest: './',\n    bust: false,\n    mode: {\n      css: {\n        sprite: \"sprites/sprite.css.svg\",\n        layout: config.svgsprite.layout,\n        prefix: \".svgsprite-%s\",\n        dimensions: \"-dims\",\n        mixin: 'sprite',\n        render: {\n          css: {\n            dest: 'css/_svg-sprite.css'\n          },\n          scss: {\n            dest: 'scss/_svg-sprite.scss'\n          },\n          less: {\n            dest: 'less/_svg-sprite.less'\n          },\n          styl: {\n            dest: 'styl/_svg-sprite.styl'\n          }\n        },\n        example: {\n          dest: 'html/svg-sprite-example.html'\n        }\n      }\n    },\n    shape: {\n      spacing: {\n        padding: 1,\n        box: 'padding'\n      }\n    }\n  })).pipe(_gulp[\"default\"].dest('build/svg-sprites'));\n}\n/* ==================================================================================================================\n *  # Tasks\n * ================================================================================================================== */\n\n/**\n * Task: clean-dist\n * runs: clean function\n */\n\n\n_gulp[\"default\"].task('clean', clean);\n/**\n * Task: copy-assets\n * runs: copyAssets function\n */\n\n\n_gulp[\"default\"].task('copy-assets', copyAssets);\n/**\n * Task: copy-images\n * runs: copyImages function\n */\n\n\n_gulp[\"default\"].task('copy-images', copyImages);\n/**\n * Task: copy-init-js\n * runs: copyInitJs function\n */\n\n\n_gulp[\"default\"].task('copy-init-js', copyInitJs);\n/**\n * Task: copy-gsb-modules\n * runs: copyGsbModules function\n */\n\n\n_gulp[\"default\"].task('copy-gsb-modules', copyGsbModules);\n/**\n * Task: generate-js\n * runs: generateJS function\n */\n\n\n_gulp[\"default\"].task('generate-js', generateJS);\n/**\n * Task: generate-pages\n * runs: generatePages function\n */\n\n\n_gulp[\"default\"].task('generate-pages', generatePages);\n/**\n * Task: generate-sass\n * runs: generateSASS function\n */\n\n\n_gulp[\"default\"].task('generate-sass', generateSASS);\n/**\n * Task: generate-scaled-images\n * runs: generateScaledImages function\n */\n\n\n_gulp[\"default\"].task('generate-scaled-images', generateScaledImages);\n/**\n * Task: generate-sprites\n * runs: generateSprites function\n */\n\n\n_gulp[\"default\"].task('generate-sprites', generateSprites);\n/**\n * Task: generate-single-sprite\n * runs: generateSingleSprite function\n */\n\n\n_gulp[\"default\"].task('generate-single-sprite', generateSingleSprite);\n/**\n * Task: generate-svg-sprite\n * runs: generateSvgSprite function\n */\n\n\n_gulp[\"default\"].task('generate-svg-sprite', generateSvgSprite);\n/**\n * Task: generate-styleguide\n * runs: generateStyleGuide function\n */\n\n\n_gulp[\"default\"].task('generate-styleguide', generateStyleGuide);\n/**\n * Task: run-server\n * runs: startServer function, watch function\n */\n\n\n_gulp[\"default\"].task('run-server', _gulp[\"default\"].series(startServer, watch));\n/**\n * Task: built\n * runs: generate-sass task, generate-js task, copy-images task\n */\n\n\n_gulp[\"default\"].task('built', _gulp[\"default\"].series('clean', 'generate-svg-sprite', _gulp[\"default\"].parallel('generate-js', 'copy-assets', 'copy-init-js', 'copy-gsb-modules', 'generate-sass', 'copy-images', 'generate-pages'), 'generate-styleguide'));\n/**\n * Task: default\n * runs: built task, run-server task\n */\n\n\n_gulp[\"default\"].task('default', _gulp[\"default\"].series('built', 'run-server'));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInJlc2l6ZUltYWdlIiwicmVxdWlyZSIsIiQiLCJQcm9taXNlIiwicHJvbWlzZSIsIlBST0RVQ1RJT04iLCJ5YXJncyIsImFyZ3YiLCJwcm9kdWN0aW9uIiwiY29uZmlnIiwibG9hZENvbmZpZyIsImNvbmZpZ0ZpbGUiLCJmcyIsInJlYWRGaWxlU3luYyIsIkpTT04iLCJwYXJzZSIsImVuc3VyZUZvbGRlciIsImRpciIsImJTdWNjZXNzIiwidHlwZWNoZWNrcyIsImlzRW1wdHkiLCJzdGFydHNXaXRoIiwiX19kaXJuYW1lIiwicGF0aCIsImpvaW4iLCJleGlzdHNTeW5jIiwibWtkaXJwIiwic3luYyIsImlzTm90RW1wdHkiLCJnZXRGb2xkZXJzIiwicmVhZGRpclN5bmMiLCJmaWx0ZXIiLCJmaWxlIiwic3RhdFN5bmMiLCJpc0RpcmVjdG9yeSIsInN0YXJ0U2VydmVyIiwiZG9uZSIsImJyb3dzZXIiLCJpbml0Iiwic2VydmVyIiwicGF0aHMiLCJkaXN0IiwicG9ydCIsImRldmVsb3BtZW50IiwicmVsb2FkU2VydmVyIiwicmVsb2FkIiwid2F0Y2giLCJndWxwIiwic3JjIiwiYXNzZXRzIiwiY29weUFzc2V0cyIsIm9uIiwic2VyaWVzIiwiZ2VuZXJhdGVQYWdlcyIsInJlc2V0UGFnZXMiLCJnZW5lcmF0ZVNBU1MiLCJnZW5lcmF0ZUpTIiwiY29weUluaXRKcyIsImNvcHlJbWFnZXMiLCJnZW5lcmF0ZVN0eWxlR3VpZGUiLCJjbGVhbiIsImJ1aWxkIiwicGlwZSIsImRlc3QiLCJjb3B5R3NiTW9kdWxlcyIsImltYWdlbWluIiwiZ2lmc2ljbGUiLCJpbnRlcmxhY2VkIiwibW96anBlZyIsInF1YWxpdHkiLCJwcm9ncmVzc2l2ZSIsIm9wdGlwbmciLCJvcHRpbWl6YXRpb25MZXZlbCIsInN2Z28iLCJwbHVnaW5zIiwicmVtb3ZlVmlld0JveCIsImNsZWFudXBJRHMiLCJnZW5lcmF0ZVNjYWxlZEltYWdlcyIsImZpbGVzIiwiZ2xvYiIsInJlc2l6ZWltZyIsImluZGV4UmVsYXRpdlBhdGgiLCJpbmRleE9mIiwiYWJzb2x1dFBhdGhQcmVmaXgiLCJzdWJzdHJpbmciLCJsZW5ndGgiLCJmaWxlbmFtZSIsImRpbWVuc2lvbktleSIsInNpemVzIiwiaW5kZXhFeHRlbnNpb24iLCJsYXN0SW5kZXhPZiIsImhhc093blByb3BlcnR5IiwiZGltZW5zaW9uIiwicmVzaXplaW1nT3B0aW9ucyIsImJIYXNXaWR0aCIsImlzTnVtZXJpYyIsIndpZHRoIiwiYkhhc0hlaWdodCIsImhlaWdodCIsInRhcmdldFBhdGgiLCJ0YXJnZXQiLCJzdWJGb2xkZXIiLCJzdWJGb2xkZXJzRW5kSW5kZXgiLCJpc1RydWUiLCJvcHRpb25zIiwiY3JlYXRlRm9sZGVycyIsInRhcmdldEZpbGVuYW1lIiwiaXNGYWxzZSIsInRhcmdldEZpbGUiLCJ0aGVuIiwiYnVmIiwid3JpdGVGaWxlU3luYyIsImphdmFzY3JpcHQiLCJzb3VyY2VtYXBzIiwiY29uY2F0IiwiYmFiZWwiLCJ1Z2xpZnkiLCJlIiwiY29uc29sZSIsImxvZyIsIndyaXRlIiwicm9vdCIsImxheW91dHMiLCJwYXJ0aWFscyIsImRhdGEiLCJoZWxwZXJzIiwicGFuaW5pIiwicmVmcmVzaCIsInNhc3MiLCJkYXJ0U2FzcyIsImxvZ0Vycm9yIiwiYXV0b3ByZWZpeGVyIiwiY3NzbmFubyIsImNzcyIsInN0cmVhbSIsImdlbmVyYXRlU3ByaXRlcyIsImZvbGRlcnMiLCJuc2ciLCJzcHJpdGVfc3JjIiwiZm9sZGVyIiwiaXNGaWxlIiwiZ2xvYkltYWdlcyIsIm1hcCIsImZvbGRlck5hbWUiLCJsYXN0Rm9sZGVySW5kZXgiLCJzZXAiLCJmb3JFYWNoIiwiZ2VuZXJhdGVTcHJpdGUiLCJnZW5lcmF0ZVNpbmdsZVNwcml0ZSIsImN1cnJlbnRTcHJpdGUiLCJyZXNvbHZlIiwicmVqZWN0Iiwic3ByaXRlTmFtZSIsInNwcml0ZV9wcmVmaXgiLCJzcHJpdGVfc3VmZml4Iiwic3ByaXRlRmlsZW5hbWUiLCJzdHlsZXNoZWV0RmlsZW5hbWUiLCJzdHlsZXNoZWV0X3ByZWZpeCIsInN0eWxlc2hlZXRfc3VmZml4Iiwic3R5bGVzaGVldF9leHRlbnNpb24iLCJuc2dDb25maWciLCJzcHJpdGVQYXRoIiwic3ByaXRlX3RhcmdldCIsInN0eWxlc2hlZXQiLCJzdHlsZXNoZWV0UGF0aCIsInN0eWxlc2hlZXRfdGFyZ2V0Iiwic3R5bGVzaGVldE9wdGlvbnMiLCJwcmVmaXgiLCJjb21wb3NpdG9yIiwibGF5b3V0IiwibGF5b3V0T3B0aW9ucyIsInBhZGRpbmciLCJlcnIiLCJvdXRwdXQiLCJ0ZW1wbGF0ZSIsImdlbmVyYXRlU3ZnU3ByaXRlIiwic3Znc3ByaXRlIiwic3ZnU3ByaXRlIiwiYnVzdCIsIm1vZGUiLCJzcHJpdGUiLCJkaW1lbnNpb25zIiwibWl4aW4iLCJyZW5kZXIiLCJzY3NzIiwibGVzcyIsInN0eWwiLCJleGFtcGxlIiwic2hhcGUiLCJzcGFjaW5nIiwiYm94IiwidGFzayIsInBhcmFsbGVsIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxXQUFXLEdBQUtDLE9BQU8sQ0FBQyxZQUFELENBQTdCLEMsQ0FFQTs7O0FBQ0EsSUFBTUMsQ0FBQyxHQUFHLGlDQUFRO0FBQUUsV0FBUztBQUFYLENBQVIsQ0FBVixDLENBRUE7O0FBQ0EsSUFBTUMsUUFBTyxHQUFHQyx1QkFBUUQsT0FBeEIsQyxDQUVBOztBQUNBLElBQU1FLFVBQVUsR0FBRyxDQUFDLENBQUVDLGtCQUFNQyxJQUFOLENBQVdDLFVBQWpDLEMsQ0FFQTtBQUNBOztBQUNBLElBQU1DLE1BQU0sR0FBR0MsVUFBVSxFQUF6QjtBQUlBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUNBLFNBQVNBLFVBQVQs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QUFDQTtBQUNBO0FBQ0E7OztBQUNBWixpQkFBS2dKLElBQUwsQ0FBVSxZQUFWLEVBQ0loSixpQkFBS0ssTUFBTCxDQUNJakIsV0FESixFQUVJVyxLQUZKLENBREo7QUFRQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0FDLGlCQUFLZ0osSUFBTCxDQUFVLE9BQVYsRUFDSWhKLGlCQUFLSyxNQUFMLENBQ0ksT0FESixFQUVJLHFCQUZKLEVBR0lMLGlCQUFLaUosUUFBTCxDQUNJLGFBREosRUFFSSxhQUZKLEVBR0ksY0FISixFQUlJLGtCQUpKLEVBS0ksZUFMSixFQU1JLGFBTkosRUFPSSxnQkFQSixDQUhKLEVBWUkscUJBWkosQ0FESjtBQWtCQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0FqSixpQkFBS2dKLElBQUwsQ0FBVSxTQUFWLEVBQ0loSixpQkFBS0ssTUFBTCxDQUNJLE9BREosRUFFSSxZQUZKLENBREoiLCJzb3VyY2VSb290IjoiL1VzZXJzL2NhcnN0ZW5rcmF1cy9FbnR3aWNrbHVuZy9naXRodWIvbm9kZWpzL0tOLTIwMjIvIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgZ3VscCAgICAgZnJvbSAnZ3VscCc7XG5pbXBvcnQgcGx1Z2lucyAgZnJvbSAnZ3VscC1sb2FkLXBsdWdpbnMnO1xuaW1wb3J0IGZzICAgICAgIGZyb20gJ2ZzJztcbmltcG9ydCBwYXRoICAgICBmcm9tICdwYXRoJztcbmltcG9ydCBta2RpcnAgICBmcm9tICdtYWtlLWRpcic7XG5pbXBvcnQgeWFyZ3MgICAgZnJvbSAneWFyZ3MnO1xuLy8gVE9ETzogWUFNTCB3aWVkZXIgYWt0aXZpZXJlbiwgZGEgZGllIFlBTUwgY29uZmlnIHNlbGYgcmVmZXJlbmNlcyB1bmQgbmVzdGVkIHZhbHVlcyB2ZXJ3ZW5kZW4ga2FublxuaW1wb3J0IHlhbWwgICAgIGZyb20gJ2pzLXlhbWwnO1xuaW1wb3J0IG5zZyAgICAgIGZyb20gJ25vZGUtc3ByaXRlLWdlbmVyYXRvcic7XG5pbXBvcnQgcHJvbWlzZSAgZnJvbSAnZXM2LXByb21pc2UnO1xuaW1wb3J0IGJyb3dzZXIgIGZyb20gJ2Jyb3dzZXItc3luYyc7XG5pbXBvcnQgcmltcmFmICAgZnJvbSAncmltcmFmJztcbmltcG9ydCBwYW5pbmkgICBmcm9tICdwYW5pbmknO1xuaW1wb3J0IHNoZXJwYSAgIGZyb20gJ3N0eWxlLXNoZXJwYSc7XG4vL2ltcG9ydCB0eXBlY2hlY2tzIGZyb20gJy4vZ3VscC9mdW5jdGlvbnMvdHlwZS1jaGVja3MnO1xuaW1wb3J0IHR5cGVjaGVja3MgZnJvbSAnQHNndG11cnRhdWdoL3R5cGVjaGVja3MnO1xuaW1wb3J0IGdsb2IgICAgIGZyb20gJ2dsb2InO1xuLy9pbXBvcnQgc3ZnU3ByaXRlc2hlZXQgZnJvbSAnQG1hcml1c2d1bmRlcnNlbi9ndWxwLXN2Zy1zcHJpdGVzaGVldCc7XG5pbXBvcnQgbG9nIGZyb20gJ2ZhbmN5LWxvZyc7XG5cbmNvbnN0IHJlc2l6ZUltYWdlICAgPSByZXF1aXJlKCdyZXNpemUtaW1nJyk7XG5cbi8vIExvYWQgYWxsIEd1bHAgcGx1Z2lucyBpbnRvIG9uZSB2YXJpYWJsZVxuY29uc3QgJCA9IHBsdWdpbnMoeyAnREVCVUcnOiB0cnVlIH0pO1xuXG4vLyBQcm9taXNlIERlZmluaXRpb24gZm9yIFRhc2tzIHdpdGhvdXQgU3RyZWFtcyBvciBleGlzdGluZyBQcm9taXNlc1xuY29uc3QgUHJvbWlzZSA9IHByb21pc2UuUHJvbWlzZTtcblxuLy8gQ2hlY2sgZm9yIC0tcHJvZHVjdGlvbiBmbGFnXG5jb25zdCBQUk9EVUNUSU9OID0gISEoeWFyZ3MuYXJndi5wcm9kdWN0aW9uKTtcblxuLy8gTG9hZCBzZXR0aW5ncyBmcm9tIHNldHRpbmdzLnltbFxuLy8gY29uc3QgeyBDT01QQVRJQklMSVRZLCBQT1JULCBVTkNTU19PUFRJT05TLCBQQVRIUyB9ID0gbG9hZENvbmZpZygpO1xuY29uc3QgY29uZmlnID0gbG9hZENvbmZpZygpO1xuXG5cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiAgIyBGdW5jdGlvbnNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICAjIyBIZWxwZXIgRnVuY3Rpb25zXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuLyoqXG4gKiBMb2FkIHRoZSBKU09OIENvbmZpZ1xuICovXG5mdW5jdGlvbiBsb2FkQ29uZmlnKCkge1xuICAgIC8vIGxldCB5bWxGaWxlID0gZnMucmVhZEZpbGVTeW5jKCdjb25maWcueW1sJywgJ3V0ZjgnKTtcbiAgICAvLyByZXR1cm4geWFtbC5sb2FkKHltbEZpbGUpO1xuXG4gICAgbGV0IGNvbmZpZ0ZpbGUgPSBmcy5yZWFkRmlsZVN5bmMoJ2NvbmZpZy5qc29uJywgJ3V0Zi04Jyk7XG4gICAgcmV0dXJuIEpTT04ucGFyc2UoY29uZmlnRmlsZSk7XG59XG5cbi8qKlxuICogQ3JlYXRlcyB0aGUgZ2l2ZW4gZGlyZWN0eSBpZiBpdCBub3QgZXhpc3RzLlxuICogQHBhcmFtIGRpclxuICovXG5mdW5jdGlvbiBlbnN1cmVGb2xkZXIoZGlyKSB7XG4gICAgbGV0IGJTdWNjZXNzID0gZmFsc2U7XG4gICAgaWYgKCF0eXBlY2hlY2tzLmlzRW1wdHkoZGlyKSkge1xuICAgICAgICBpZiAoICFkaXIuc3RhcnRzV2l0aCggX19kaXJuYW1lICkgKSB7XG4gICAgICAgICAgICBkaXIgPSBwYXRoLmpvaW4oX19kaXJuYW1lLCBkaXIpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCAhKGJTdWNjZXNzID0gZnMuZXhpc3RzU3luYyhkaXIpKSApIHtcbiAgICAgICAgICAgIGNvbnN0IHBhdGggPSBta2RpcnAuc3luYyggZGlyICk7XG4gICAgICAgICAgICBpZiAoIHR5cGVjaGVja3MuaXNOb3RFbXB0eShwYXRoKSApIHtcbiAgICAgICAgICAgICAgICBiU3VjY2VzcyA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGJTdWNjZXNzO1xufVxuXG4vLyAvKipcbi8vICAqIERldGVybWluZXMgYWxsIGZpbGVzIG9mIGEgZ2l2ZW4gZGlyZWN0b3J5XG4vLyAgKi9cbi8vIGZ1bmN0aW9uIGdldEZpbGVzKGRpcikge1xuLy8gICAgIHJldHVybiBmcy5yZWFkZGlyU3luYyhkaXIpXG4vLyAgICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKGZpbGUpIHtcbi8vICAgICAgICAgICAgIHJldHVybiBmcy5zdGF0U3luYyhwYXRoLmpvaW4oZGlyLCBmaWxlKSkuaXNGaWxlKCk7XG4vLyAgICAgICAgIH0pO1xuLy8gfVxuXG4vKipcbiAqIERldGVybWluZXMgYWxsIHN1YmZvbGRlcnMgb2YgYSBnaXZlbiBkaXJlY3RvcnlcbiAqL1xuZnVuY3Rpb24gZ2V0Rm9sZGVycyhkaXIpIHtcbiAgICByZXR1cm4gZnMucmVhZGRpclN5bmMoZGlyKVxuICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uIChmaWxlKSB7XG4gICAgICAgICAgICByZXR1cm4gZnMuc3RhdFN5bmMocGF0aC5qb2luKGRpciwgZmlsZSkpLmlzRGlyZWN0b3J5KCk7XG4gICAgICAgIH0pO1xufVxuXG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogICMjIEJyb3dzZXIgRnVuY3Rpb25zXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuLyoqXG4gKiBTdGFydCBhIHNlcnZlciB3aXRoIEJyb3dzZXJTeW5jIHRvIHByZXZpZXcgdGhlIHNpdGUgaW5cbiAqIEBwYXJhbSBkb25lXG4gKi9cbmZ1bmN0aW9uIHN0YXJ0U2VydmVyKGRvbmUpIHtcbiAgICBicm93c2VyLmluaXQoe1xuICAgICAgICBzZXJ2ZXI6IGNvbmZpZy5wYXRocy5kaXN0LnBhdGgsXG4gICAgICAgIHBvcnQ6IGNvbmZpZy5kZXZlbG9wbWVudC5zZXJ2ZXIucG9ydFxuICAgIH0pO1xuICAgIGRvbmUoKTtcbn1cblxuLyoqXG4gKiBSZWxvYWQgdGhlIGJyb3dzZXIgd2l0aCBCcm93c2VyU3luY1xuICovXG5mdW5jdGlvbiByZWxvYWRTZXJ2ZXIoZG9uZSkge1xuICAgIGJyb3dzZXIucmVsb2FkKCk7XG4gICAgZG9uZSgpO1xufVxuXG4vKipcbiAqIFdhdGNoIGZvciBjaGFuZ2VzIHRvIHN0YXRpYyBhc3NldHMsIHBhZ2VzLCBTYXNzLCBhbmQgSmF2YVNjcmlwdFxuICogQHBhcmFtIGRvbmVcbiAqL1xuZnVuY3Rpb24gd2F0Y2goZG9uZSkge1xuICAgIGd1bHAud2F0Y2goY29uZmlnLnBhdGhzLnNyYy5hc3NldHMsIGNvcHlBc3NldHMpO1xuICAgIGd1bHAud2F0Y2goJ3NyYy9wYWdlcy8qKi8qLmh0bWwnKS5vbignY2hhbmdlJywgZ3VscC5zZXJpZXMoZ2VuZXJhdGVQYWdlcywgYnJvd3Nlci5yZWxvYWQpKTtcbiAgICBndWxwLndhdGNoKCdzcmMve2xheW91dHMscGFydGlhbHN9LyoqL3sqLmh0bWwsKi5oYnN9Jykub24oJ2NoYW5nZScsIGd1bHAuc2VyaWVzKHJlc2V0UGFnZXMsIGdlbmVyYXRlUGFnZXMsIGJyb3dzZXIucmVsb2FkKSk7XG4gICAgZ3VscC53YXRjaCgnc3JjL2Fzc2V0cy9zY3NzLyoqLyouc2NzcycsIGdlbmVyYXRlU0FTUyk7XG4gICAgZ3VscC53YXRjaCgnc3JjL2Fzc2V0cy9qcy8qKi8qLmpzJykub24oJ2NoYW5nZScsIGd1bHAuc2VyaWVzKGdlbmVyYXRlSlMsIGNvcHlJbml0SnMsIGJyb3dzZXIucmVsb2FkKSk7XG4gICAgZ3VscC53YXRjaCgnc3JjL2Fzc2V0cy9pbWcvKiovKicpLm9uKCdjaGFuZ2UnLCBndWxwLnNlcmllcyhjb3B5SW1hZ2VzLCBicm93c2VyLnJlbG9hZCkpO1xuICAgIGd1bHAud2F0Y2goJ3NyYy9zdHlsZWd1aWRlLyoqJykub24oJ2NoYW5nZScsIGd1bHAuc2VyaWVzKGdlbmVyYXRlU3R5bGVHdWlkZSwgYnJvd3Nlci5yZWxvYWQpKTtcbiAgICBkb25lKCk7XG59XG5cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgIyMgQnVpbGQgRnVuY3Rpb25zXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuLyoqXG4gKiBjbGVhblxuICogQHBhcmFtIGRvbmVcbiAqIERlbGV0ZXMgZGlzdCBhbmQgYnVpbGQgZm9sZGVyXG4gKiBUaGlzIGhhcHBlbnMgZXZlcnkgdGltZSBhIGJ1aWxkIHN0YXJ0c1xuICovXG5mdW5jdGlvbiBjbGVhbihkb25lKSB7XG4gICAgcmltcmFmKGNvbmZpZy5wYXRocy5kaXN0LnBhdGgsIGRvbmUpO1xuICAgIHJpbXJhZihjb25maWcucGF0aHMuYnVpbGQucGF0aCwgZG9uZSk7XG59XG5cbi8qKlxuICogY29weUFzc2V0c1xuICogQHJldHVybnMgeyp9XG4gKiBDb3B5IGZpbGVzIG91dCBvZiB0aGUgYXNzZXRzIGZvbGRlclxuICogVGhpcyB0YXNrIHNraXBzIG92ZXIgdGhlIFwiaW1nXCIsIFwianNcIiwgYW5kIFwic2Nzc1wiIGZvbGRlcnMsIHdoaWNoIGFyZSBwYXJzZWQgc2VwYXJhdGVseVxuICovXG5mdW5jdGlvbiBjb3B5QXNzZXRzKCkge1xuICAgIHJldHVybiBndWxwLnNyYyhbXG4gICAgICAgIFwic3JjL2Fzc2V0cy8qKi8qXCIsXG4gICAgICAgIFwiIXNyYy9hc3NldHMvaW1neywvKip9XCIsXG4gICAgICAgIFwiIXNyYy9hc3NldHMvaW1nLXNyY3ssLyoqfVwiLFxuICAgICAgICBcIiFzcmMvYXNzZXRzL2pzeywvKip9XCIsXG4gICAgICAgIFwiIXNyYy9hc3NldHMvc2Nzc3ssLyoqfVwiXG4gICAgXSkucGlwZShndWxwLmRlc3QoXG4gICAgICAgIGNvbmZpZy5wYXRocy5kaXN0LnBhdGggKyAnLycgKyBjb25maWcucGF0aHMuZGlzdC5hc3NldHNcbiAgICApKTtcbn1cblxuLyoqXG4gKiBUT0RPXG4gKiBAcmV0dXJucyB7Kn1cbiAqL1xuZnVuY3Rpb24gY29weUluaXRKcygpIHtcbiAgICByZXR1cm4gZ3VscC5zcmMoXCJzcmMvYXNzZXRzL3ZlbmRvcnMvZ3NiL2pzL2luaXQuanNcIikucGlwZShndWxwLmRlc3QoY29uZmlnLnBhdGhzLmRpc3QucGF0aCArICcvJyArIGNvbmZpZy5wYXRocy5kaXN0LmFzc2V0cyArICcvanMnKSk7XG59XG5cbi8qKlxuICogVE9ET1xuICogQHJldHVybnMgeyp9XG4gKi9cbmZ1bmN0aW9uIGNvcHlHc2JNb2R1bGVzKCkge1xuICAgIHJldHVybiBndWxwLnNyYyhcInNyYy9hc3NldHMvdmVuZG9ycy9nc2IvanMvZ3NiLyoqLyouanNcIikucGlwZShndWxwLmRlc3QoY29uZmlnLnBhdGhzLmRpc3QucGF0aCArICcvJyArIGNvbmZpZy5wYXRocy5kaXN0LmFzc2V0cyArICcvanMvZ3NiJykpO1xuXG59XG5cbi8qKlxuICogQ29weSBpbWFnZXMgdG8gdGhlIFwiZGlzdFwiIGZvbGRlci5cbiAqIEluIHByb2R1Y3Rpb24sIHRoZSBpbWFnZXMgYXJlIGNvbXByZXNzZWRcbiAqIC8vVE9ETzogSGllciBtdWVzc2VuIGFsbGUgc3JjIE9yZG5lciBpZ25vcmllcnQgd2VyZGVuISBMZWlkZXIgZ3JlaWZ0IGRpZSBMb2dpayBoaWVyIG5vY2ggbmljaHRcbiAqL1xuZnVuY3Rpb24gY29weUltYWdlcygpIHtcbiAgICByZXR1cm4gZ3VscC5zcmMoW1xuICAgICAgICAnc3JjL2Fzc2V0cy9pbWcvKionXG4gICAgXSkucGlwZSgkLmlmKFBST0RVQ1RJT04sICQuaW1hZ2VtaW4oXG4gICAgICAgIFtcbiAgICAgICAgICAgICQuaW1hZ2VtaW4uZ2lmc2ljbGUoe2ludGVybGFjZWQ6IHRydWV9KSxcbiAgICAgICAgICAgICQuaW1hZ2VtaW4ubW96anBlZyh7cXVhbGl0eTogNzUsIHByb2dyZXNzaXZlOiB0cnVlfSksXG4gICAgICAgICAgICAkLmltYWdlbWluLm9wdGlwbmcoe29wdGltaXphdGlvbkxldmVsOiA1fSksXG4gICAgICAgICAgICAkLmltYWdlbWluLnN2Z28oe1xuICAgICAgICAgICAgICAgIHBsdWdpbnM6IFtcbiAgICAgICAgICAgICAgICAgICAge3JlbW92ZVZpZXdCb3g6IHRydWV9LFxuICAgICAgICAgICAgICAgICAgICB7Y2xlYW51cElEczogZmFsc2V9XG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgfSlcbiAgICAgICAgXVxuICAgICAgICAvKiogZ3VscC1pbWlnZW1pbiBncm9lc3NlciAzXG4gICAgICAgICB7XG4gICAgICAgICAgICBwcm9ncmVzc2l2ZTogdHJ1ZVxuICAgICAgICB9XG4gICAgICAgICAqL1xuICAgICkpKS5waXBlKGd1bHAuZGVzdCgnZGlzdC9hc3NldHMvaW1nJykpO1xufVxuXG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogICMjIEltYWdlIFNjYWxlciBGdW5jdGlvbnNcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG4vKipcbiAqIGdlbmVyYXRlU2NhbGVkSW1hZ2VzXG4gKiBAcGFyYW0gZG9uZVxuICovXG5mdW5jdGlvbiBnZW5lcmF0ZVNjYWxlZEltYWdlcyhkb25lKSB7XG4gICAgbGV0IGZpbGVzID0gZ2xvYi5zeW5jKFxuICAgICAgICBjb25maWcucmVzaXplaW1nLnNyYyxcbiAgICAgICAge1xuICAgICAgICAgICAgXCJhYnNvbHV0ZVwiOiB0cnVlLFxuICAgICAgICAgICAgXCJpZ25vcmVcIjogWycqKi8qLmlnbm9yZS8qKiddXG4gICAgICAgIH1cbiAgICApO1xuXG4gICAgZm9yIChsZXQgZmlsZSBvZiBmaWxlcykge1xuICAgICAgICBpZiAodHlwZWNoZWNrcy5pc05vdEVtcHR5KGZpbGUpKSB7XG4gICAgICAgICAgICBsZXQgaW5kZXhSZWxhdGl2UGF0aCA9IGZpbGUuaW5kZXhPZihjb25maWcucmVzaXplaW1nLnBhdGgpO1xuXG4gICAgICAgICAgICBpZiAoaW5kZXhSZWxhdGl2UGF0aCA+IC0xKSB7XG4gICAgICAgICAgICAgICAgbGV0IGFic29sdXRQYXRoUHJlZml4ID0gXCJcIjtcbiAgICAgICAgICAgICAgICBpZiAoaW5kZXhSZWxhdGl2UGF0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgYWJzb2x1dFBhdGhQcmVmaXggPSBmaWxlLnN1YnN0cmluZygwLCBpbmRleFJlbGF0aXZQYXRoKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoZmlsZS5sZW5ndGggPiBpbmRleFJlbGF0aXZQYXRoKSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCBmaWxlbmFtZSA9IGZpbGUuc3Vic3RyaW5nKGluZGV4UmVsYXRpdlBhdGggKyBjb25maWcucmVzaXplaW1nLnBhdGgubGVuZ3RoKTtcblxuICAgICAgICAgICAgICAgICAgICBmb3IoIGxldCBkaW1lbnNpb25LZXkgaW4gY29uZmlnLnJlc2l6ZWltZy5zaXplcyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBpbmRleEV4dGVuc2lvbiA9IGZpbGVuYW1lLmxhc3RJbmRleE9mKCcuJyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbmRleEV4dGVuc2lvbiA+IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvbmZpZy5yZXNpemVpbWcuc2l6ZXMuaGFzT3duUHJvcGVydHkoZGltZW5zaW9uS2V5KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgZGltZW5zaW9uID0gY29uZmlnLnJlc2l6ZWltZy5zaXplc1tkaW1lbnNpb25LZXldO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlY2hlY2tzLmlzTm90RW1wdHkoZGltZW5zaW9uKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gY2hlY2sgY29uZmlndXJlZCBoZWlnaHQgLyB3aWRodFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHJlc2l6ZWltZ09wdGlvbnMgPSB7fTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBiSGFzV2lkdGggPSB0eXBlY2hlY2tzLmlzTnVtZXJpYyhkaW1lbnNpb24ud2lkdGgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGJIYXNIZWlnaHQgPSB0eXBlY2hlY2tzLmlzTnVtZXJpYyhkaW1lbnNpb24uaGVpZ2h0KTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFiSGFzV2lkdGggJiYgIWJIYXNIZWlnaHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2coXCJzaXplICcke2RpbWVuc2lvbktleX0nIGJlc2l0enQgd2VkZXIgZWluZSBIb2VoZW4gbm9jaCBlaW5lIEJyZWl0ZW5hbmdhYmUhXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHNldCBhdXRvIGRpbWVuc2lvbiBmb3IgbWlzc2luZyBjb25maWdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghYkhhc1dpZHRoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gZGltZW5zaW9uLndpZHRoID0gLTE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGltZW5zaW9uLndpZHRoID0gXCJhdXRvXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWJIYXNIZWlnaHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBkaW1lbnNpb24uaGVpZ2h0ID0gLTE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGltZW5zaW9uLmhlaWdodCA9IFwiYXV0b1wiO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNyZWF0ZSB0YXJnZXRGb2xkZXJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCB0YXJnZXRQYXRoID0gcGF0aC5qb2luKGFic29sdXRQYXRoUHJlZml4LCBjb25maWcucmVzaXplaW1nLnRhcmdldCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgc3ViRm9sZGVyID0gXCJcIjtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gU3ViRm9sZGVyIGNoZWNrXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgc3ViRm9sZGVyc0VuZEluZGV4ID0gZmlsZW5hbWUubGFzdEluZGV4T2YoJy8nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdWJGb2xkZXJzRW5kSW5kZXggPiAtMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1YkZvbGRlciA9IGZpbGVuYW1lLnN1YnN0cmluZygwLCBzdWJGb2xkZXJzRW5kSW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXRQYXRoID0gcGF0aC5qb2luKHRhcmdldFBhdGgsIHN1YkZvbGRlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZWNoZWNrcy5pc1RydWUoY29uZmlnLnJlc2l6ZWltZy5vcHRpb25zLmNyZWF0ZUZvbGRlcnMpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0UGF0aCA9IHBhdGguam9pbih0YXJnZXRQYXRoLCBkaW1lbnNpb25LZXkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5zdXJlRm9sZGVyKHRhcmdldFBhdGgpO1xuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNyZWF0ZSBGaWxlbmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHRhcmdldEZpbGVuYW1lID0gXCJcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdWJGb2xkZXJzRW5kSW5kZXggPiAtMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEZpbGVuYW1lID0gZmlsZW5hbWUuc3Vic3RyaW5nKHN1YkZvbGRlcnNFbmRJbmRleCwgaW5kZXhFeHRlbnNpb24pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0RmlsZW5hbWUgPSBmaWxlbmFtZS5zdWJzdHJpbmcoMCwgaW5kZXhFeHRlbnNpb24pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZWNoZWNrcy5pc0ZhbHNlKGNvbmZpZy5yZXNpemVpbWcub3B0aW9ucy5jcmVhdGVGb2xkZXJzKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEZpbGVuYW1lICs9ICdfJztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXRGaWxlbmFtZSArPSBkaW1lbnNpb25LZXk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEZpbGVuYW1lICs9IGZpbGVuYW1lLnN1YnN0cmluZyhpbmRleEV4dGVuc2lvbik7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCB0YXJnZXRGaWxlID0gcGF0aC5qb2luKHRhcmdldFBhdGgsIHRhcmdldEZpbGVuYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvZygndGFyZ2V0RmlsZSAnICsgdGFyZ2V0RmlsZSk7XG5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gY3JlYXRlIHJlc2l6ZWltZyBvcHRpb25zXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZWNoZWNrcy5pc051bWVyaWMoZGltZW5zaW9uLndpZHRoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc2l6ZWltZ09wdGlvbnNbJ3dpZHRoJ10gPSBkaW1lbnNpb24ud2lkdGg7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZWNoZWNrcy5pc051bWVyaWMoZGltZW5zaW9uLmhlaWdodCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNpemVpbWdPcHRpb25zWydoZWlnaHQnXSA9IGRpbWVuc2lvbi5oZWlnaHQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gZ2VuZXJhdGUgcmVzaXplZCBpbWFnZXNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc2l6ZUltYWdlKGZzLnJlYWRGaWxlU3luYyhmaWxlKSwgcmVzaXplaW1nT3B0aW9ucykudGhlbihidWYgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZzLndyaXRlRmlsZVN5bmModGFyZ2V0RmlsZSwgYnVmKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGRvbmUoKTtcbn1cblxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICAjIyBKYXZhU2NyaXB0IEZ1bmN0aW9uc1xuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cbi8qKlxuICogQ29tYmluZSBKYXZhU2NyaXB0IGludG8gb25lIGZpbGVcbiAqIEluIHByb2R1Y3Rpb24sIHRoZSBmaWxlIGlzIG1pbmlmaWVkXG4gKi9cbmZ1bmN0aW9uIGdlbmVyYXRlSlMoKSB7XG4gICAgcmV0dXJuIGd1bHAuc3JjKGNvbmZpZy5wYXRocy5zcmMuamF2YXNjcmlwdClcbiAgICAgICAgLnBpcGUoJC5zb3VyY2VtYXBzLmluaXQoKSlcbiAgICAgICAgLnBpcGUoJC5jb25jYXQoJ2FwcC5qcycpKVxuICAgICAgICAucGlwZSgkLmJhYmVsKCkpXG4gICAgICAgIC5waXBlKCQuaWYoUFJPRFVDVElPTiwgJC51Z2xpZnkoKVxuICAgICAgICAgICAgLm9uKCdlcnJvcicsIGUgPT4geyBjb25zb2xlLmxvZyhlKTsgfSlcbiAgICAgICAgKSlcbiAgICAgICAgLnBpcGUoJC5pZighUFJPRFVDVElPTiwgJC5zb3VyY2VtYXBzLndyaXRlKCkpKVxuICAgICAgICAucGlwZShndWxwLmRlc3QoY29uZmlnLnBhdGhzLmRpc3QuamF2YXNjcmlwdCkpO1xufVxuXG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogICMjIFBhZ2VzIEZ1bmN0aW9uc1xuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cbi8qKlxuICogQ29weSBwYWdlIHRlbXBsYXRlcyBpbnRvIGZpbmlzaGVkIEhUTUwgZmlsZXNcbiAqIEByZXR1cm5zIHsqfVxuICovXG5mdW5jdGlvbiBnZW5lcmF0ZVBhZ2VzKCkge1xuICAgIHJldHVybiBndWxwLnNyYygnc3JjL3BhZ2VzLyoqLyoue2h0bWwsaGJzLGhhbmRsZWJhcnN9JylcbiAgICAgICAgLnBpcGUocGFuaW5pKHtcbiAgICAgICAgICAgIHJvb3Q6ICdzcmMvcGFnZXMvJyxcbiAgICAgICAgICAgIGxheW91dHM6ICdzcmMvbGF5b3V0cy8nLFxuICAgICAgICAgICAgcGFydGlhbHM6ICdzcmMvcGFydGlhbHMvJyxcbiAgICAgICAgICAgIGRhdGE6ICdzcmMvZGF0YS8nLFxuICAgICAgICAgICAgaGVscGVyczogJ3NyYy9oZWxwZXJzLydcbiAgICAgICAgfSkpXG4gICAgICAgIC5waXBlKGd1bHAuZGVzdChjb25maWcucGF0aHMuZGlzdC5wYXRoKSk7XG59XG5cbi8qKlxuICogcmVzZXRQYWdlc1xuICogQHBhcmFtIGRvbmVcbiAqIExvYWQgdXBkYXRlZCBIVE1MIHRlbXBsYXRlcyBhbmQgcGFydGlhbHMgaW50byBQYW5pbmlcbiAqL1xuZnVuY3Rpb24gcmVzZXRQYWdlcyhkb25lKSB7XG4gICAgcGFuaW5pLnJlZnJlc2goKTtcbiAgICBkb25lKCk7XG59XG5cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgIyMgU0FTUyBGdW5jdGlvbnNcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG4vKipcbiAqIENvbXBpbGUgU2FzcyBpbnRvIENTU1xuICogSW4gcHJvZHVjdGlvbiwgdGhlIENTUyBpcyBjb21wcmVzc2VkXG4gKi9cbmZ1bmN0aW9uIGdlbmVyYXRlU0FTUygpIHtcbiAgICByZXR1cm4gZ3VscC5zcmMoY29uZmlnLnBhdGhzLnNyYy5zYXNzKVxuICAgICAgICAucGlwZSgkLnNvdXJjZW1hcHMuaW5pdCgpKVxuICAgICAgICAucGlwZSgkLmRhcnRTYXNzKCkub24oJ2Vycm9yJywgJC5kYXJ0U2Fzcy5sb2dFcnJvcikpXG4gICAgICAgIC5waXBlKCQuYXV0b3ByZWZpeGVyKCkpXG4gICAgICAgIC8vIENvbW1lbnQgaW4gdGhlIHBpcGUgYmVsb3cgdG8gcnVuIFVuQ1NTIGluIHByb2R1Y3Rpb25cbiAgICAgICAgLy8gLnBpcGUoJC5pZihQUk9EVUNUSU9OLCAkLnVuY3NzKFVOQ1NTX09QVElPTlMpKSlcbiAgICAgICAgLnBpcGUoJC5pZihQUk9EVUNUSU9OLCAkLmNzc25hbm8oKSkpXG4gICAgICAgIC5waXBlKCQuaWYoIVBST0RVQ1RJT04sICQuc291cmNlbWFwcy53cml0ZSgpKSlcbiAgICAgICAgLnBpcGUoZ3VscC5kZXN0KGNvbmZpZy5wYXRocy5kaXN0LmNzcykpXG4gICAgICAgIC5waXBlKGJyb3dzZXIucmVsb2FkKHsgc3RyZWFtOiB0cnVlIH0pKTtcbn1cblxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICAjIyBTcHJpdGUgRnVuY3Rpb25zXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuLyoqXG4gKiBUYXNrLUZ1bmN0aW9uXG4gKiBEZXRlcm1pbmVzIGFsbCBzcHJpdGUgZm9sZGVycyBpbnNpZGUgdGhlIHNwcml0ZS1zcmMgZm9sZGVyIGFuZFxuICogcnVucyB0aGUgZ2VuZXJhdGVTcHJpdGUgZnVuY3Rpb24gb24gZWFjaCBvZiB0aGVtLlxuICovXG5mdW5jdGlvbiBnZW5lcmF0ZVNwcml0ZXMoZG9uZSkge1xuICAgIGxldCBmb2xkZXJzID0gZ2xvYi5zeW5jKHBhdGguam9pbihjb25maWcubnNnLnNwcml0ZV9zcmMsICcqJyksIHtcbiAgICAgICAgXCJpZ25vcmVcIjogWycqKi8qLmlnbm9yZSddXG5cbiAgICB9KS5maWx0ZXIoZnVuY3Rpb24gKGZvbGRlcikge1xuXG4gICAgICAgIGlmIChmcy5zdGF0U3luYyhmb2xkZXIpLmlzRmlsZSgpKSB7XG4gICAgICAgICAgICBsb2coYG5vIHBhcmVudCBzcHJpdGUtZm9sZGVyIGRlZmluaWVkLiBmaWxlICcke2ZvbGRlcn0nIHdpbGwgYmUgaWdub3JlZCFgKTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBnbG9iSW1hZ2VzID0gZ2xvYi5zeW5jKCBmb2xkZXIgKyAnKiovKi57cG5nLGpwZyxqcGVnfScgKTtcbiAgICAgICAgcmV0dXJuIChnbG9iSW1hZ2VzLmxlbmd0aCA+PSAxKTtcblxuICAgIH0pLm1hcChmdW5jdGlvbiAoZm9sZGVyKSB7XG4gICAgICAgIGxldCBmb2xkZXJOYW1lID0gZm9sZGVyO1xuICAgICAgICBsZXQgbGFzdEZvbGRlckluZGV4ID0gZm9sZGVyLmxhc3RJbmRleE9mKHBhdGguc2VwKSArIDE7XG5cbiAgICAgICAgaWYgKCBmb2xkZXIubGVuZ3RoID4gbGFzdEZvbGRlckluZGV4ICkge1xuICAgICAgICAgICAgZm9sZGVyTmFtZSA9IGZvbGRlci5zdWJzdHJpbmcobGFzdEZvbGRlckluZGV4KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZm9sZGVyTmFtZTtcblxuICAgIH0pO1xuXG4gICAgZm9sZGVycy5mb3JFYWNoKCBhc3luYyBmdW5jdGlvbiAoZm9sZGVyKSB7XG4gICAgICAgIHJldHVybiBhd2FpdCBnZW5lcmF0ZVNwcml0ZShmb2xkZXIpO1xuICAgIH0pO1xuICAgIGRvbmUoKTtcbn1cblxuLyoqXG4gKiBUYXNrLUZ1bmN0aW9uXG4gKiBEZXRlcm1pbmVzIGFsbCBzcHJpdGUgZm9sZGVycyBpbnNpZGUgdGhlIHNwcml0ZS1zcmMgZm9sZGVyIGFuZFxuICogcnVucyB0aGUgZ2VuZXJhdGVTcHJpdGUgZnVuY3Rpb24gb24gZWFjaCBvZiB0aGVtLlxuICovXG5mdW5jdGlvbiBnZW5lcmF0ZVNpbmdsZVNwcml0ZSgpIHtcbiAgICByZXR1cm4gZ2VuZXJhdGVTcHJpdGUobnVsbCk7XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhbmQgcnVucyB0aGUgTm9kZS1TcHJpdGUtR2VuZXJhdG9yIG9uIHRoZSBnaXZlbiBmb2xkZXIuXG4gKiBPbmx5IFBORyBmaWxlcyB3aWxsIGJlIHVzZWQgZm9yIHRoZSBzcHJpdGUuIFRoZSBvdXRwdXQgaXMgYSBzcHJpdGUgUE5HIGFuZCBhXG4gKiBTQVNTIHNvdXJjZSBmaWxlIHdpdGggYWxsIGNvbnRhaW5pbmcgaW1hZ2UgaW5mb3JtYXRpb25zLlxuICogQHBhcmFtIGZvbGRlclxuICogQHJldHVybnMgeyp9XG4gKi9cbmZ1bmN0aW9uIGdlbmVyYXRlU3ByaXRlKGZvbGRlcikge1xuICAgIGxldCBjdXJyZW50U3ByaXRlID0gZm9sZGVyO1xuICAgIGlmICh0eXBlY2hlY2tzLmlzRW1wdHkoZm9sZGVyKSkge1xuICAgICAgICBmb2xkZXIgPSAnJztcbiAgICAgICAgY3VycmVudFNwcml0ZSA9ICdhbGwtc3ByaXRlcyc7XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBsb2coYFN0YXJ0IGdlbmVyYXRpbmcgc3ByaXRlIGZvciAnJHtjdXJyZW50U3ByaXRlfScuYCk7XG5cbiAgICAgICAgbGV0IHNwcml0ZU5hbWUgPSAgICAgICAgYC0ke2NvbmZpZy5uc2cuc3ByaXRlX3ByZWZpeH0ke2N1cnJlbnRTcHJpdGV9JHtjb25maWcubnNnLnNwcml0ZV9zdWZmaXh9LWA7XG4gICAgICAgIGxldCBzcHJpdGVGaWxlbmFtZSA9ICAgIGAke2NvbmZpZy5uc2cuc3ByaXRlX3ByZWZpeH0ke2N1cnJlbnRTcHJpdGV9JHtjb25maWcubnNnLnNwcml0ZV9zdWZmaXh9LnBuZ2A7XG4gICAgICAgIGxldCBzdHlsZXNoZWV0RmlsZW5hbWUgPWAke2NvbmZpZy5uc2cuc3R5bGVzaGVldF9wcmVmaXh9JHtjdXJyZW50U3ByaXRlfSR7Y29uZmlnLm5zZy5zdHlsZXNoZWV0X3N1ZmZpeH0ke2NvbmZpZy5uc2cuc3R5bGVzaGVldF9leHRlbnNpb259YDtcblxuICAgICAgICBjb25zdCBuc2dDb25maWcgPSB7XG4gICAgICAgICAgICBzcHJpdGVQYXRoOiBwYXRoLmpvaW4oY29uZmlnLm5zZy5zcHJpdGVfdGFyZ2V0LCBzcHJpdGVGaWxlbmFtZSksXG4gICAgICAgICAgICBzcmM6IFtcbiAgICAgICAgICAgICAgICBwYXRoLmpvaW4oY29uZmlnLm5zZy5zcHJpdGVfc3JjLCBmb2xkZXIsICcqKi8qLntwbmcsanBnLGpwZWd9JylcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBzdHlsZXNoZWV0OiAnc2NzcycsXG4gICAgICAgICAgICBzdHlsZXNoZWV0UGF0aDogcGF0aC5qb2luKGNvbmZpZy5uc2cuc3R5bGVzaGVldF90YXJnZXQsIHN0eWxlc2hlZXRGaWxlbmFtZSApLFxuICAgICAgICAgICAgc3R5bGVzaGVldE9wdGlvbnM6IHtcbiAgICAgICAgICAgICAgICBwcmVmaXg6IHNwcml0ZU5hbWUsXG4gICAgICAgICAgICAgICAgc3ByaXRlUGF0aDogYHNyYy9hc3NldHMvaW1nL3Nwcml0ZXMvJHtzcHJpdGVGaWxlbmFtZX1gXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY29tcG9zaXRvcjogJ2ppbXAnLFxuICAgICAgICAgICAgbGF5b3V0OiBjb25maWcubnNnLmxheW91dCxcbiAgICAgICAgICAgIGxheW91dE9wdGlvbnM6IHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAzMFxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIG5zZyggbnNnQ29uZmlnLCBmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KGVycik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBsb2coYFNwcml0ZSBmb3IgJyR7Y3VycmVudFNwcml0ZX0nIGdlbmVyYXRlZCFgKTtcbiAgICAgICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXNvbHZlKCk7XG4gICAgfSk7XG59XG5cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgIyMgU3R5bGVndWlkZSBGdW5jdGlvbnNcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG4vKipcbiAqIGdlbmVyYXRlU3R5bGVHdWlkZVxuICogQHBhcmFtIGRvbmVcbiAqIEdlbmVyYXRlIGEgc3R5bGUgZ3VpZGUgZnJvbSB0aGUgTWFya2Rvd24gY29udGVudCBhbmQgSFRNTCB0ZW1wbGF0ZSBpbiBzdHlsZWd1aWRlXG4gKi9cbmZ1bmN0aW9uIGdlbmVyYXRlU3R5bGVHdWlkZShkb25lKSB7XG4gICAgbGV0IHRhcmdldCA9IGNvbmZpZy5wYXRocy5kaXN0LnBhdGggKyAnL2RvYyc7XG4gICAgZW5zdXJlRm9sZGVyKHRhcmdldCk7XG4gICAgc2hlcnBhKCdzcmMvc3R5bGVndWlkZS9pbmRleC5tZCcsXG4gICAgICAgIHtcbiAgICAgICAgICAgIG91dHB1dDogdGFyZ2V0ICsgJy9zdHlsZWd1aWRlLmh0bWwnLFxuICAgICAgICAgICAgdGVtcGxhdGU6ICdzcmMvdGVtcGxhdGVzL3N0eWxlZ3VpZGUvdGVtcGxhdGUuaGJzJ1xuICAgICAgICB9LFxuICAgICAgICBkb25lXG4gICAgKTtcbn1cblxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICAjIyBTVkcgU3ByaXRlIEZ1bmN0aW9uc1xuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cbi8qKlxuICogZ2VuZXJhdGVTdmdTcHJpdGVcbiAqIEByZXR1cm5zIHsqfVxuICovXG5mdW5jdGlvbiBnZW5lcmF0ZVN2Z1Nwcml0ZSgpIHtcbiAgICByZXR1cm4gZ3VscC5zcmMoY29uZmlnLnN2Z3Nwcml0ZS5zcmMsIHtcbiAgICAgICAgXCJpZ25vcmVcIjogWycqKi8qLmlnbm9yZS8qKiddXG4gICAgfSkucGlwZSgkLnN2Z1Nwcml0ZSh7XG4gICAgICAgIGRlc3Q6ICcuLycsXG4gICAgICAgIGJ1c3Q6IGZhbHNlLFxuICAgICAgICBtb2RlOiB7XG4gICAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgICAgICBzcHJpdGU6IFwic3ByaXRlcy9zcHJpdGUuY3NzLnN2Z1wiLFxuICAgICAgICAgICAgICAgIGxheW91dDogY29uZmlnLnN2Z3Nwcml0ZS5sYXlvdXQsXG4gICAgICAgICAgICAgICAgcHJlZml4OiBcIi5zdmdzcHJpdGUtJXNcIixcbiAgICAgICAgICAgICAgICBkaW1lbnNpb25zOiBcIi1kaW1zXCIsXG4gICAgICAgICAgICAgICAgbWl4aW46ICdzcHJpdGUnLFxuICAgICAgICAgICAgICAgIHJlbmRlcjoge1xuICAgICAgICAgICAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlc3Q6ICdjc3MvX3N2Zy1zcHJpdGUuY3NzJ1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBzY3NzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZXN0OiAnc2Nzcy9fc3ZnLXNwcml0ZS5zY3NzJ1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBsZXNzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZXN0OiAnbGVzcy9fc3ZnLXNwcml0ZS5sZXNzJ1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBzdHlsOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZXN0OiAnc3R5bC9fc3ZnLXNwcml0ZS5zdHlsJ1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBleGFtcGxlOiB7XG4gICAgICAgICAgICAgICAgICAgIGRlc3Q6ICdodG1sL3N2Zy1zcHJpdGUtZXhhbXBsZS5odG1sJ1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIHNoYXBlOiB7XG4gICAgICAgICAgICBzcGFjaW5nOiB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogMSxcbiAgICAgICAgICAgICAgICBib3g6ICdwYWRkaW5nJ1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSkpLnBpcGUoZ3VscC5kZXN0KCdidWlsZC9zdmctc3ByaXRlcycpKTtcbn1cblxuXG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogICMgVGFza3NcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFRhc2s6IGNsZWFuLWRpc3RcbiAqIHJ1bnM6IGNsZWFuIGZ1bmN0aW9uXG4gKi9cbmd1bHAudGFzaygnY2xlYW4nLCBjbGVhbiApO1xuXG4vKipcbiAqIFRhc2s6IGNvcHktYXNzZXRzXG4gKiBydW5zOiBjb3B5QXNzZXRzIGZ1bmN0aW9uXG4gKi9cbmd1bHAudGFzaygnY29weS1hc3NldHMnLCBjb3B5QXNzZXRzICk7XG5cbi8qKlxuICogVGFzazogY29weS1pbWFnZXNcbiAqIHJ1bnM6IGNvcHlJbWFnZXMgZnVuY3Rpb25cbiAqL1xuZ3VscC50YXNrKCdjb3B5LWltYWdlcycsIGNvcHlJbWFnZXMgKTtcblxuLyoqXG4gKiBUYXNrOiBjb3B5LWluaXQtanNcbiAqIHJ1bnM6IGNvcHlJbml0SnMgZnVuY3Rpb25cbiAqL1xuZ3VscC50YXNrKCdjb3B5LWluaXQtanMnLCBjb3B5SW5pdEpzICk7XG5cbi8qKlxuICogVGFzazogY29weS1nc2ItbW9kdWxlc1xuICogcnVuczogY29weUdzYk1vZHVsZXMgZnVuY3Rpb25cbiAqL1xuZ3VscC50YXNrKCdjb3B5LWdzYi1tb2R1bGVzJywgY29weUdzYk1vZHVsZXMgKTtcblxuLyoqXG4gKiBUYXNrOiBnZW5lcmF0ZS1qc1xuICogcnVuczogZ2VuZXJhdGVKUyBmdW5jdGlvblxuICovXG5ndWxwLnRhc2soJ2dlbmVyYXRlLWpzJywgZ2VuZXJhdGVKUyApO1xuXG4vKipcbiAqIFRhc2s6IGdlbmVyYXRlLXBhZ2VzXG4gKiBydW5zOiBnZW5lcmF0ZVBhZ2VzIGZ1bmN0aW9uXG4gKi9cbmd1bHAudGFzaygnZ2VuZXJhdGUtcGFnZXMnLCBnZW5lcmF0ZVBhZ2VzICk7XG5cbi8qKlxuICogVGFzazogZ2VuZXJhdGUtc2Fzc1xuICogcnVuczogZ2VuZXJhdGVTQVNTIGZ1bmN0aW9uXG4gKi9cbmd1bHAudGFzaygnZ2VuZXJhdGUtc2FzcycsIGdlbmVyYXRlU0FTUyApO1xuXG4vKipcbiAqIFRhc2s6IGdlbmVyYXRlLXNjYWxlZC1pbWFnZXNcbiAqIHJ1bnM6IGdlbmVyYXRlU2NhbGVkSW1hZ2VzIGZ1bmN0aW9uXG4gKi9cbmd1bHAudGFzaygnZ2VuZXJhdGUtc2NhbGVkLWltYWdlcycsIGdlbmVyYXRlU2NhbGVkSW1hZ2VzICk7XG5cbi8qKlxuICogVGFzazogZ2VuZXJhdGUtc3ByaXRlc1xuICogcnVuczogZ2VuZXJhdGVTcHJpdGVzIGZ1bmN0aW9uXG4gKi9cbmd1bHAudGFzaygnZ2VuZXJhdGUtc3ByaXRlcycsIGdlbmVyYXRlU3ByaXRlcyApO1xuXG4vKipcbiAqIFRhc2s6IGdlbmVyYXRlLXNpbmdsZS1zcHJpdGVcbiAqIHJ1bnM6IGdlbmVyYXRlU2luZ2xlU3ByaXRlIGZ1bmN0aW9uXG4gKi9cbmd1bHAudGFzaygnZ2VuZXJhdGUtc2luZ2xlLXNwcml0ZScsIGdlbmVyYXRlU2luZ2xlU3ByaXRlICk7XG5cbi8qKlxuICogVGFzazogZ2VuZXJhdGUtc3ZnLXNwcml0ZVxuICogcnVuczogZ2VuZXJhdGVTdmdTcHJpdGUgZnVuY3Rpb25cbiAqL1xuZ3VscC50YXNrKCdnZW5lcmF0ZS1zdmctc3ByaXRlJywgZ2VuZXJhdGVTdmdTcHJpdGUgKTtcblxuLyoqXG4gKiBUYXNrOiBnZW5lcmF0ZS1zdHlsZWd1aWRlXG4gKiBydW5zOiBnZW5lcmF0ZVN0eWxlR3VpZGUgZnVuY3Rpb25cbiAqL1xuZ3VscC50YXNrKCdnZW5lcmF0ZS1zdHlsZWd1aWRlJywgZ2VuZXJhdGVTdHlsZUd1aWRlICk7XG5cbi8qKlxuICogVGFzazogcnVuLXNlcnZlclxuICogcnVuczogc3RhcnRTZXJ2ZXIgZnVuY3Rpb24sIHdhdGNoIGZ1bmN0aW9uXG4gKi9cbmd1bHAudGFzaygncnVuLXNlcnZlcicsXG4gICAgZ3VscC5zZXJpZXMoXG4gICAgICAgIHN0YXJ0U2VydmVyLFxuICAgICAgICB3YXRjaFxuICAgIClcbik7XG5cblxuLyoqXG4gKiBUYXNrOiBidWlsdFxuICogcnVuczogZ2VuZXJhdGUtc2FzcyB0YXNrLCBnZW5lcmF0ZS1qcyB0YXNrLCBjb3B5LWltYWdlcyB0YXNrXG4gKi9cbmd1bHAudGFzaygnYnVpbHQnLFxuICAgIGd1bHAuc2VyaWVzKFxuICAgICAgICAnY2xlYW4nLFxuICAgICAgICAnZ2VuZXJhdGUtc3ZnLXNwcml0ZScsXG4gICAgICAgIGd1bHAucGFyYWxsZWwoXG4gICAgICAgICAgICAnZ2VuZXJhdGUtanMnLFxuICAgICAgICAgICAgJ2NvcHktYXNzZXRzJyxcbiAgICAgICAgICAgICdjb3B5LWluaXQtanMnLFxuICAgICAgICAgICAgJ2NvcHktZ3NiLW1vZHVsZXMnLFxuICAgICAgICAgICAgJ2dlbmVyYXRlLXNhc3MnLFxuICAgICAgICAgICAgJ2NvcHktaW1hZ2VzJyxcbiAgICAgICAgICAgICdnZW5lcmF0ZS1wYWdlcydcbiAgICAgICAgKSxcbiAgICAgICAgJ2dlbmVyYXRlLXN0eWxlZ3VpZGUnXG4gICAgKVxuKTtcblxuXG4vKipcbiAqIFRhc2s6IGRlZmF1bHRcbiAqIHJ1bnM6IGJ1aWx0IHRhc2ssIHJ1bi1zZXJ2ZXIgdGFza1xuICovXG5ndWxwLnRhc2soJ2RlZmF1bHQnLFxuICAgIGd1bHAuc2VyaWVzKFxuICAgICAgICAnYnVpbHQnLFxuICAgICAgICAncnVuLXNlcnZlcidcbiAgICApXG4pO1xuIl19","map":{"version":3,"sources":["gulpfile.babel.js"],"names":["resizeImage","require","$","Promise","promise","PRODUCTION","yargs","argv","production","config","loadConfig","configFile","fs","readFileSync","JSON","parse","ensureFolder","dir","bSuccess","typechecks","isEmpty","startsWith","__dirname","path","join","existsSync","mkdirp","sync","isNotEmpty","getFolders","readdirSync","filter","file","statSync","isDirectory","startServer","done","browser","init","server","paths","dist","port","development","reloadServer","reload","watch","gulp","src","assets","copyAssets","on","series","generatePages","resetPages","generateSASS","generateJS","copyInitJs","copyImages","generateStyleGuide","clean","build","pipe","dest","copyGsbModules","imagemin","gifsicle","interlaced","mozjpeg","quality","progressive","optipng","optimizationLevel","svgo","plugins","removeViewBox","cleanupIDs","generateScaledImages","files","glob","resizeimg","indexRelativPath","indexOf","absolutPathPrefix","substring","length","filename","dimensionKey","sizes","indexExtension","lastIndexOf","hasOwnProperty","dimension","resizeimgOptions","bHasWidth","isNumeric","width","bHasHeight","height","targetPath","target","subFolder","subFoldersEndIndex","isTrue","options","createFolders","targetFilename","isFalse","targetFile","then","buf","writeFileSync","javascript","sourcemaps","concat","babel","uglify","e","console","log","write","root","layouts","partials","data","helpers","panini","refresh","sass","dartSass","logError","autoprefixer","cssnano","css","stream","generateSprites","folders","nsg","sprite_src","folder","isFile","globImages","map","folderName","lastFolderIndex","sep","forEach","generateSprite","generateSingleSprite","currentSprite","resolve","reject","spriteName","sprite_prefix","sprite_suffix","spriteFilename","stylesheetFilename","stylesheet_prefix","stylesheet_suffix","stylesheet_extension","nsgConfig","spritePath","sprite_target","stylesheet","stylesheetPath","stylesheet_target","stylesheetOptions","prefix","compositor","layout","layoutOptions","padding","err","output","template","generateSvgSprite","svgsprite","svgSprite","bust","mode","sprite","dimensions","mixin","render","scss","less","styl","example","shape","spacing","box","task","parallel"],"mappings":"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","sourceRoot":"/Users/carstenkraus/Entwicklung/github/nodejs/KN-2022/","sourcesContent":["'use strict';\n\nimport gulp     from 'gulp';\nimport plugins  from 'gulp-load-plugins';\nimport fs       from 'fs';\nimport path     from 'path';\nimport mkdirp   from 'make-dir';\nimport yargs    from 'yargs';\n// TODO: YAML wieder aktivieren, da die YAML config self references und nested values verwenden kann\nimport yaml     from 'js-yaml';\nimport nsg      from 'node-sprite-generator';\nimport promise  from 'es6-promise';\nimport browser  from 'browser-sync';\nimport rimraf   from 'rimraf';\nimport panini   from 'panini';\nimport sherpa   from 'style-sherpa';\n//import typechecks from './gulp/functions/type-checks';\nimport typechecks from '@sgtmurtaugh/typechecks';\nimport glob     from 'glob';\n//import svgSpritesheet from '@mariusgundersen/gulp-svg-spritesheet';\nimport log from 'fancy-log';\n\nconst resizeImage   = require('resize-img');\n\n// Load all Gulp plugins into one variable\nconst $ = plugins({ 'DEBUG': true });\n\n// Promise Definition for Tasks without Streams or existing Promises\nconst Promise = promise.Promise;\n\n// Check for --production flag\nconst PRODUCTION = !!(yargs.argv.production);\n\n// Load settings from settings.yml\n// const { COMPATIBILITY, PORT, UNCSS_OPTIONS, PATHS } = loadConfig();\nconst config = loadConfig();\n\n\n\n/* ==================================================================================================================\n *  # Functions\n * ================================================================================================================== */\n\n/* ------------------------------\n *  ## Helper Functions\n * ------------------------------ */\n\n/**\n * Load the JSON Config\n */\nfunction loadConfig() {\n    // let ymlFile = fs.readFileSync('config.yml', 'utf8');\n    // return yaml.load(ymlFile);\n\n    let configFile = fs.readFileSync('config.json', 'utf-8');\n    return JSON.parse(configFile);\n}\n\n/**\n * Creates the given directy if it not exists.\n * @param dir\n */\nfunction ensureFolder(dir) {\n    let bSuccess = false;\n    if (!typechecks.isEmpty(dir)) {\n        if ( !dir.startsWith( __dirname ) ) {\n            dir = path.join(__dirname, dir);\n        }\n\n        if ( !(bSuccess = fs.existsSync(dir)) ) {\n            const path = mkdirp.sync( dir );\n            if ( typechecks.isNotEmpty(path) ) {\n                bSuccess = true;\n            }\n        }\n    }\n    return bSuccess;\n}\n\n// /**\n//  * Determines all files of a given directory\n//  */\n// function getFiles(dir) {\n//     return fs.readdirSync(dir)\n//         .filter(function (file) {\n//             return fs.statSync(path.join(dir, file)).isFile();\n//         });\n// }\n\n/**\n * Determines all subfolders of a given directory\n */\nfunction getFolders(dir) {\n    return fs.readdirSync(dir)\n        .filter(function (file) {\n            return fs.statSync(path.join(dir, file)).isDirectory();\n        });\n}\n\n\n/* ------------------------------\n *  ## Browser Functions\n * ------------------------------ */\n\n/**\n * Start a server with BrowserSync to preview the site in\n * @param done\n */\nfunction startServer(done) {\n    browser.init({\n        server: config.paths.dist.path,\n        port: config.development.server.port\n    });\n    done();\n}\n\n/**\n * Reload the browser with BrowserSync\n */\nfunction reloadServer(done) {\n    browser.reload();\n    done();\n}\n\n/**\n * Watch for changes to static assets, pages, Sass, and JavaScript\n * @param done\n */\nfunction watch(done) {\n    gulp.watch(config.paths.src.assets, copyAssets);\n    gulp.watch('src/pages/**/*.html').on('change', gulp.series(generatePages, browser.reload));\n    gulp.watch('src/{layouts,partials}/**/{*.html,*.hbs}').on('change', gulp.series(resetPages, generatePages, browser.reload));\n    gulp.watch('src/assets/scss/**/*.scss', generateSASS);\n    gulp.watch('src/assets/js/**/*.js').on('change', gulp.series(generateJS, copyInitJs, browser.reload));\n    gulp.watch('src/assets/img/**/*').on('change', gulp.series(copyImages, browser.reload));\n    gulp.watch('src/styleguide/**').on('change', gulp.series(generateStyleGuide, browser.reload));\n    done();\n}\n\n\n/* ------------------------------\n *  ## Build Functions\n * ------------------------------ */\n\n/**\n * clean\n * @param done\n * Deletes dist and build folder\n * This happens every time a build starts\n */\nfunction clean(done) {\n    rimraf(config.paths.dist.path, done);\n    rimraf(config.paths.build.path, done);\n}\n\n/**\n * copyAssets\n * @returns {*}\n * Copy files out of the assets folder\n * This task skips over the \"img\", \"js\", and \"scss\" folders, which are parsed separately\n */\nfunction copyAssets() {\n    return gulp.src([\n        \"src/assets/**/*\",\n        \"!src/assets/img{,/**}\",\n        \"!src/assets/img-src{,/**}\",\n        \"!src/assets/js{,/**}\",\n        \"!src/assets/scss{,/**}\"\n    ]).pipe(gulp.dest(\n        config.paths.dist.path + '/' + config.paths.dist.assets\n    ));\n}\n\n/**\n * TODO\n * @returns {*}\n */\nfunction copyInitJs() {\n    return gulp.src(\"src/assets/vendors/gsb/js/init.js\").pipe(gulp.dest(config.paths.dist.path + '/' + config.paths.dist.assets + '/js'));\n}\n\n/**\n * TODO\n * @returns {*}\n */\nfunction copyGsbModules() {\n    return gulp.src(\"src/assets/vendors/gsb/js/gsb/**/*.js\").pipe(gulp.dest(config.paths.dist.path + '/' + config.paths.dist.assets + '/js/gsb'));\n\n}\n\n/**\n * Copy images to the \"dist\" folder.\n * In production, the images are compressed\n * //TODO: Hier muessen alle src Ordner ignoriert werden! Leider greift die Logik hier noch nicht\n */\nfunction copyImages() {\n    return gulp.src([\n        'src/assets/img/**'\n    ]).pipe($.if(PRODUCTION, $.imagemin(\n        [\n            $.imagemin.gifsicle({interlaced: true}),\n            $.imagemin.mozjpeg({quality: 75, progressive: true}),\n            $.imagemin.optipng({optimizationLevel: 5}),\n            $.imagemin.svgo({\n                plugins: [\n                    {removeViewBox: true},\n                    {cleanupIDs: false}\n                ]\n            })\n        ]\n        /** gulp-imigemin groesser 3\n         {\n            progressive: true\n        }\n         */\n    ))).pipe(gulp.dest('dist/assets/img'));\n}\n\n\n/* ------------------------------\n *  ## Image Scaler Functions\n * ------------------------------ */\n\n/**\n * generateScaledImages\n * @param done\n */\nfunction generateScaledImages(done) {\n    let files = glob.sync(\n        config.resizeimg.src,\n        {\n            \"absolute\": true,\n            \"ignore\": ['**/*.ignore/**']\n        }\n    );\n\n    for (let file of files) {\n        if (typechecks.isNotEmpty(file)) {\n            let indexRelativPath = file.indexOf(config.resizeimg.path);\n\n            if (indexRelativPath > -1) {\n                let absolutPathPrefix = \"\";\n                if (indexRelativPath > 0) {\n                    absolutPathPrefix = file.substring(0, indexRelativPath);\n                }\n\n                if (file.length > indexRelativPath) {\n                    let filename = file.substring(indexRelativPath + config.resizeimg.path.length);\n\n                    for( let dimensionKey in config.resizeimg.sizes ) {\n                        let indexExtension = filename.lastIndexOf('.');\n\n                        if (indexExtension > -1) {\n                            if (config.resizeimg.sizes.hasOwnProperty(dimensionKey)) {\n                                let dimension = config.resizeimg.sizes[dimensionKey];\n\n                                if (typechecks.isNotEmpty(dimension)) {\n                                    // check configured height / widht\n                                    let resizeimgOptions = {};\n                                    let bHasWidth = typechecks.isNumeric(dimension.width);\n                                    let bHasHeight = typechecks.isNumeric(dimension.height);\n\n                                    if (!bHasWidth && !bHasHeight) {\n                                        log(\"size '${dimensionKey}' besitzt weder eine Hoehen noch eine Breitenangabe!\");\n                                        continue;\n                                    }\n\n\n                                    // set auto dimension for missing config\n                                    if (!bHasWidth) {\n                                        // dimension.width = -1;\n                                        dimension.width = \"auto\";\n                                    }\n                                    if (!bHasHeight) {\n                                        // dimension.height = -1;\n                                        dimension.height = \"auto\";\n                                    }\n\n\n                                    // create targetFolder\n                                    let targetPath = path.join(absolutPathPrefix, config.resizeimg.target);\n                                    let subFolder = \"\";\n\n                                    // SubFolder check\n                                    let subFoldersEndIndex = filename.lastIndexOf('/');\n                                    if (subFoldersEndIndex > -1) {\n                                        subFolder = filename.substring(0, subFoldersEndIndex);\n                                    }\n\n                                    targetPath = path.join(targetPath, subFolder);\n                                    if (typechecks.isTrue(config.resizeimg.options.createFolders)) {\n                                        targetPath = path.join(targetPath, dimensionKey);\n                                    }\n                                    ensureFolder(targetPath);\n\n\n                                    // create Filename\n                                    let targetFilename = \"\";\n                                    if (subFoldersEndIndex > -1) {\n                                        targetFilename = filename.substring(subFoldersEndIndex, indexExtension);\n                                    }\n                                    else {\n                                        targetFilename = filename.substring(0, indexExtension);\n                                    }\n\n                                    if (typechecks.isFalse(config.resizeimg.options.createFolders)) {\n                                        targetFilename += '_';\n                                        targetFilename += dimensionKey;\n                                    }\n\n                                    targetFilename += filename.substring(indexExtension);\n\n                                    let targetFile = path.join(targetPath, targetFilename);\n                                    log('targetFile ' + targetFile);\n\n\n                                    // create resizeimg options\n                                    if (typechecks.isNumeric(dimension.width)) {\n                                        resizeimgOptions['width'] = dimension.width;\n                                    }\n                                    if (typechecks.isNumeric(dimension.height)) {\n                                        resizeimgOptions['height'] = dimension.height;\n                                    }\n\n\n                                    // generate resized images\n                                    resizeImage(fs.readFileSync(file), resizeimgOptions).then(buf => {\n                                        fs.writeFileSync(targetFile, buf);\n                                    });\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    done();\n}\n\n\n/* ------------------------------\n *  ## JavaScript Functions\n * ------------------------------ */\n\n/**\n * Combine JavaScript into one file\n * In production, the file is minified\n */\nfunction generateJS() {\n    return gulp.src(config.paths.src.javascript)\n        .pipe($.sourcemaps.init())\n        .pipe($.concat('app.js'))\n        .pipe($.babel())\n        .pipe($.if(PRODUCTION, $.uglify()\n            .on('error', e => { console.log(e); })\n        ))\n        .pipe($.if(!PRODUCTION, $.sourcemaps.write()))\n        .pipe(gulp.dest(config.paths.dist.javascript));\n}\n\n\n/* ------------------------------\n *  ## Pages Functions\n * ------------------------------ */\n\n/**\n * Copy page templates into finished HTML files\n * @returns {*}\n */\nfunction generatePages() {\n    return gulp.src('src/pages/**/*.{html,hbs,handlebars}')\n        .pipe(panini({\n            root: 'src/pages/',\n            layouts: 'src/layouts/',\n            partials: 'src/partials/',\n            data: 'src/data/',\n            helpers: 'src/helpers/'\n        }))\n        .pipe(gulp.dest(config.paths.dist.path));\n}\n\n/**\n * resetPages\n * @param done\n * Load updated HTML templates and partials into Panini\n */\nfunction resetPages(done) {\n    panini.refresh();\n    done();\n}\n\n\n/* ------------------------------\n *  ## SASS Functions\n * ------------------------------ */\n\n/**\n * Compile Sass into CSS\n * In production, the CSS is compressed\n */\nfunction generateSASS() {\n    return gulp.src(config.paths.src.sass)\n        .pipe($.sourcemaps.init())\n        .pipe($.dartSass().on('error', $.dartSass.logError))\n        .pipe($.autoprefixer())\n        // Comment in the pipe below to run UnCSS in production\n        // .pipe($.if(PRODUCTION, $.uncss(UNCSS_OPTIONS)))\n        .pipe($.if(PRODUCTION, $.cssnano()))\n        .pipe($.if(!PRODUCTION, $.sourcemaps.write()))\n        .pipe(gulp.dest(config.paths.dist.css))\n        .pipe(browser.reload({ stream: true }));\n}\n\n\n/* ------------------------------\n *  ## Sprite Functions\n * ------------------------------ */\n\n/**\n * Task-Function\n * Determines all sprite folders inside the sprite-src folder and\n * runs the generateSprite function on each of them.\n */\nfunction generateSprites(done) {\n    let folders = glob.sync(path.join(config.nsg.sprite_src, '*'), {\n        \"ignore\": ['**/*.ignore']\n\n    }).filter(function (folder) {\n\n        if (fs.statSync(folder).isFile()) {\n            log(`no parent sprite-folder definied. file '${folder}' will be ignored!`);\n            return false;\n        }\n\n        let globImages = glob.sync( folder + '**/*.{png,jpg,jpeg}' );\n        return (globImages.length >= 1);\n\n    }).map(function (folder) {\n        let folderName = folder;\n        let lastFolderIndex = folder.lastIndexOf(path.sep) + 1;\n\n        if ( folder.length > lastFolderIndex ) {\n            folderName = folder.substring(lastFolderIndex);\n        }\n        return folderName;\n\n    });\n\n    folders.forEach( async function (folder) {\n        return await generateSprite(folder);\n    });\n    done();\n}\n\n/**\n * Task-Function\n * Determines all sprite folders inside the sprite-src folder and\n * runs the generateSprite function on each of them.\n */\nfunction generateSingleSprite() {\n    return generateSprite(null);\n}\n\n/**\n * Creates and runs the Node-Sprite-Generator on the given folder.\n * Only PNG files will be used for the sprite. The output is a sprite PNG and a\n * SASS source file with all containing image informations.\n * @param folder\n * @returns {*}\n */\nfunction generateSprite(folder) {\n    let currentSprite = folder;\n    if (typechecks.isEmpty(folder)) {\n        folder = '';\n        currentSprite = 'all-sprites';\n    }\n\n    return new Promise(function(resolve, reject) {\n        log(`Start generating sprite for '${currentSprite}'.`);\n\n        let spriteName =        `-${config.nsg.sprite_prefix}${currentSprite}${config.nsg.sprite_suffix}-`;\n        let spriteFilename =    `${config.nsg.sprite_prefix}${currentSprite}${config.nsg.sprite_suffix}.png`;\n        let stylesheetFilename =`${config.nsg.stylesheet_prefix}${currentSprite}${config.nsg.stylesheet_suffix}${config.nsg.stylesheet_extension}`;\n\n        const nsgConfig = {\n            spritePath: path.join(config.nsg.sprite_target, spriteFilename),\n            src: [\n                path.join(config.nsg.sprite_src, folder, '**/*.{png,jpg,jpeg}')\n            ],\n            stylesheet: 'scss',\n            stylesheetPath: path.join(config.nsg.stylesheet_target, stylesheetFilename ),\n            stylesheetOptions: {\n                prefix: spriteName,\n                spritePath: `src/assets/img/sprites/${spriteFilename}`\n            },\n            compositor: 'jimp',\n            layout: config.nsg.layout,\n            layoutOptions: {\n                padding: 30\n            }\n        };\n\n        nsg( nsgConfig, function (err) {\n            if (err) {\n                reject(err);\n            }\n            else {\n                log(`Sprite for '${currentSprite}' generated!`);\n                resolve();\n            }\n        });\n        resolve();\n    });\n}\n\n\n/* ------------------------------\n *  ## Styleguide Functions\n * ------------------------------ */\n\n/**\n * generateStyleGuide\n * @param done\n * Generate a style guide from the Markdown content and HTML template in styleguide\n */\nfunction generateStyleGuide(done) {\n    let target = config.paths.dist.path + '/doc';\n    ensureFolder(target);\n    sherpa('src/styleguide/index.md',\n        {\n            output: target + '/styleguide.html',\n            template: 'src/templates/styleguide/template.hbs'\n        },\n        done\n    );\n}\n\n\n/* ------------------------------\n *  ## SVG Sprite Functions\n * ------------------------------ */\n\n/**\n * generateSvgSprite\n * @returns {*}\n */\nfunction generateSvgSprite() {\n    return gulp.src(config.svgsprite.src, {\n        \"ignore\": ['**/*.ignore/**']\n    }).pipe($.svgSprite({\n        dest: './',\n        bust: false,\n        mode: {\n            css: {\n                sprite: \"sprites/sprite.css.svg\",\n                layout: config.svgsprite.layout,\n                prefix: \".svgsprite-%s\",\n                dimensions: \"-dims\",\n                mixin: 'sprite',\n                render: {\n                    css: {\n                        dest: 'css/_svg-sprite.css'\n                    },\n                    scss: {\n                        dest: 'scss/_svg-sprite.scss'\n                    },\n                    less: {\n                        dest: 'less/_svg-sprite.less'\n                    },\n                    styl: {\n                        dest: 'styl/_svg-sprite.styl'\n                    }\n                },\n                example: {\n                    dest: 'html/svg-sprite-example.html'\n                }\n            },\n        },\n        shape: {\n            spacing: {\n                padding: 1,\n                box: 'padding'\n            }\n        }\n    })).pipe(gulp.dest('build/svg-sprites'));\n}\n\n\n\n/* ==================================================================================================================\n *  # Tasks\n * ================================================================================================================== */\n\n/**\n * Task: clean-dist\n * runs: clean function\n */\ngulp.task('clean', clean );\n\n/**\n * Task: copy-assets\n * runs: copyAssets function\n */\ngulp.task('copy-assets', copyAssets );\n\n/**\n * Task: copy-images\n * runs: copyImages function\n */\ngulp.task('copy-images', copyImages );\n\n/**\n * Task: copy-init-js\n * runs: copyInitJs function\n */\ngulp.task('copy-init-js', copyInitJs );\n\n/**\n * Task: copy-gsb-modules\n * runs: copyGsbModules function\n */\ngulp.task('copy-gsb-modules', copyGsbModules );\n\n/**\n * Task: generate-js\n * runs: generateJS function\n */\ngulp.task('generate-js', generateJS );\n\n/**\n * Task: generate-pages\n * runs: generatePages function\n */\ngulp.task('generate-pages', generatePages );\n\n/**\n * Task: generate-sass\n * runs: generateSASS function\n */\ngulp.task('generate-sass', generateSASS );\n\n/**\n * Task: generate-scaled-images\n * runs: generateScaledImages function\n */\ngulp.task('generate-scaled-images', generateScaledImages );\n\n/**\n * Task: generate-sprites\n * runs: generateSprites function\n */\ngulp.task('generate-sprites', generateSprites );\n\n/**\n * Task: generate-single-sprite\n * runs: generateSingleSprite function\n */\ngulp.task('generate-single-sprite', generateSingleSprite );\n\n/**\n * Task: generate-svg-sprite\n * runs: generateSvgSprite function\n */\ngulp.task('generate-svg-sprite', generateSvgSprite );\n\n/**\n * Task: generate-styleguide\n * runs: generateStyleGuide function\n */\ngulp.task('generate-styleguide', generateStyleGuide );\n\n/**\n * Task: run-server\n * runs: startServer function, watch function\n */\ngulp.task('run-server',\n    gulp.series(\n        startServer,\n        watch\n    )\n);\n\n\n/**\n * Task: built\n * runs: generate-sass task, generate-js task, copy-images task\n */\ngulp.task('built',\n    gulp.series(\n        'clean',\n        'generate-svg-sprite',\n        gulp.parallel(\n            'generate-js',\n            'copy-assets',\n            'copy-init-js',\n            'copy-gsb-modules',\n            'generate-sass',\n            'copy-images',\n            'generate-pages'\n        ),\n        'generate-styleguide'\n    )\n);\n\n\n/**\n * Task: default\n * runs: built task, run-server task\n */\ngulp.task('default',\n    gulp.series(\n        'built',\n        'run-server'\n    )\n);\n"]}},"mtime":1649552059776}}